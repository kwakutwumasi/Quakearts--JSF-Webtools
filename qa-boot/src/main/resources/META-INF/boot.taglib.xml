<?xml version="1.0" encoding="UTF-8"?>
<facelet-taglib version="2.0" xmlns="http://java.sun.com/xml/ns/javaee"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-facelettaglibrary_2_0.xsd">
	<namespace>http://quakearts.com/2.0/boot</namespace>
	<tag>
		<description><![CDATA[
A tag for rendering an AJAX loader components.

Decode Behavior: None

Encode Behavior: render a &gt;div&lt; element collapsed containing image to render on full page.
Creates javascript methods for calling on jsf.ajax events;

There must be only one of these components per page. Multiple components will result in unpredicatable behavior 
		]]></description>
		<tag-name>ajaxLoader</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.ajaxloader</component-type>
			<renderer-type>com.quakearts.bootstrap.ajaxloader.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootAjaxLoaderHandler</handler-class>
		</component>
		<attribute>
			<description>Image for full page loader</description>
			<name>mainloaderimage</name>
			<required>true</required>
		</attribute>
		<attribute>
			<description>Image for overlay on a components. The parent component to be overlaid should have the class 'ajax-container'.</description>
			<name>overlayloaderimage</name>
			<required>true</required>
		</attribute>
		<attribute>
			<description>Image for rendering a mini image at the right of a component.</description>
			<name>miniloaderimage</name>
			<required>true</required>
		</attribute>
		<attribute>
			<description>HTML style to render on the &gt;img&lt; tag of the mainloaderimage.</description>
			<name>mainimagestyle</name>
		</attribute>
		<attribute>
			<description>HTML style to render on the &gt;img&lt; tag of the overlayloaderimage.</description>
			<name>miniimagestyle</name>
		</attribute>
		<attribute>
			<description>HTML style to render on the &gt;img&lt; tag of the miniloaderimage.</description>
			<name>overlayimagestyle</name>
		</attribute>
		<attribute>
			<description>Start timeout for loader image animation</description>
			<name>startTimeout</name>
		</attribute>
		<attribute>
			<description>End timeout for loader image animation</description>
			<name>endTimeout</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>ValueExpression or attribute for controlling component rendering</description>
			<name>rendered</name>
			<type>java.lang.Boolean</type>
		</attribute>
	</tag>
	<tag>
		<description><![CDATA[
A tag for rendering a Bootstrap Breadcrumb component. This tag nests breadCrumbItems, stacked in a tree structure to indicate navigation routes
for the application.
<br />
Decode behviour: none
<br />
Encode behavior: This compoenent handles the rendering of its child components. The component iterates over the child components, testing each
child component to determine which ones to render. The test can be one of two things: if the child component has a value, that value is 
compared to this components value. If it is true, it and all parent components (up to this component) are added to a stack to be evaluated.
The second test evaluates a ValueExpression to determine if it should be rendred. If true the same process applies.
		]]></description>
		<tag-name>breadCrumb</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.breadcrumbs</component-type>
			<renderer-type>com.quakearts.bootstrap.breadcrumbs.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" attribute of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>The HTML click event handler. This attribute can hold ValueExpressions</description>
			<name>onclick</name>
		</attribute>
		<attribute>
			<description>The HTML double click event handler. This attribute can hold ValueExpressions</description>
			<name>ondblclick</name>
		</attribute>
		<attribute>
			<description>The HTML mouse down event handler. This attribute can hold ValueExpressions</description>
			<name>onmousedown</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmousemove</name>
		</attribute>
		<attribute>
			<description>The HTML mouse out event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseout</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseover</name>
		</attribute>
		<attribute>
			<description>The HTML mouse up event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse wheel event handler. This attribute can hold ValueExpressions</description>
			<name>onmousewheel</name>
		</attribute>
		<attribute>
			<description>The HTML mouse enter event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseenter</name>
		</attribute>
		<attribute>
			<description>The HTML mouse enter event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseleave</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" attribute of the HTML tag</description>
			<name>style</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "title" attribute of the HTML tag</description>
			<name>title</name>
		</attribute>
	</tag>
	<tag>
		<description><![CDATA[
A tag for rendering a Bootstrap Breadcrumb component. This component can be nested within a breadCrumb tag (the root of the tree)
or within another breadCrumbItem. The value attribute of this component is compared to the parent component's value to determine
activation. Alternatively the activate attribute is evaluated to determine activation. This enables two patterns for bread crumb
creation: as a tree, representing the navigational paths the app can take, or as a stack that can be activated arbitraily.

Decode behavior: None

Encode behavior: Renders any UIOutput child component.
		]]></description>
		<tag-name>breadCrumbItem</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.breadcrumbitem</component-type>
			<renderer-type>com.quakearts.bootstrap.breadcrumbitem.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the Body of the bread crumb</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" attribute of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true the breadcrumbitem will be rendered as active</description>
			<name>activate</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression for rendering the component's label</description>
			<name>label</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that holds the UIOutput or UIInput component's value</description>
			<name>value</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Converter implementation for converting the UIInput or UIOutput component's value</description>
			<name>converter</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a conversion error</description>
			<name>converterMessage</name>
		</attribute>
		<attribute>
			<description>The HTML click event handler. This attribute can hold ValueExpressions</description>
			<name>onclick</name>
		</attribute>
		<attribute>
			<description>The HTML double click event handler. This attribute can hold ValueExpressions</description>
			<name>ondblclick</name>
		</attribute>
		<attribute>
			<description>The HTML mouse down event handler. This attribute can hold ValueExpressions</description>
			<name>onmousedown</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmousemove</name>
		</attribute>
		<attribute>
			<description>The HTML mouse out event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseout</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseover</name>
		</attribute>
		<attribute>
			<description>The HTML mouse up event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse wheel event handler. This attribute can hold ValueExpressions</description>
			<name>onmousewheel</name>
		</attribute>
		<attribute>
			<description>The HTML mouse enter event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseenter</name>
		</attribute>
		<attribute>
			<description>The HTML mouse leave event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseleave</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" attribute of the HTML tag</description>
			<name>style</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "title" attribute of the HTML tag</description>
			<name>title</name>
		</attribute>
	</tag>
	<tag>
		<description><![CDATA[
Bootstrap Button Group tag renderer. This tag must only have button components as children. Any other component will lead to
unpredictable behavior

Decode behavior: None

Encode behavior: Renders a &lt;div&gt; element with the button group classes. Renders child components within the div
		]]></description>
		<tag-name>buttonGroup</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.btngroup</component-type>
			<renderer-type>com.quakearts.bootstrap.btngroup.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression for rendering the component's label</description>
			<name>label</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" attribute of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" attribute of the HTML tag</description>
			<name>style</name>
		</attribute>
	</tag>
	<tag>
		<description><![CDATA[
Bootstrap Button Toolbar tag renderer. This tag must only have button components as children. Any other component will lead to
unpredictable behavior

Decode behavior: None

Encode behavior: Renders a &lt;div&gt; element with the button group classes. Renders child components within the div
		]]></description>
		<tag-name>buttonToolbar</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.btntoolbar</component-type>
			<renderer-type>com.quakearts.bootstrap.btntoolbar.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression for rendering the component's label</description>
			<name>label</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" attribute of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" attribute of the HTML tag</description>
			<name>style</name>
		</attribute>
	</tag>
	<tag>
		<description><![CDATA[
Bootstrap Input Group with a checkbox in the label portion. This component can nest inputText tags and provide a check box to activate or
deactivate the component. It can also render a label for the checkbox in the "form-control" classed element.

Decode behavior: None

Encode behavior: Renders a Bootstrap input group element with a checkbox at the label (input-group-addon) portion. Renders an inputText 
child component if present
		]]></description>
		<tag-name>checkbox</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.checkbox</component-type>
			<renderer-type>com.quakearts.bootstrap.checkbox.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that holds the UIOutput or UIInput component's value</description>
			<name>value</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Converter implementation for converting the UIInput or UIOutput component's value</description>
			<name>converter</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a conversion error</description>
			<name>converterMessage</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Validator implementation for validating the UIInput component's value</description>
			<name>validator</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a validator error</description>
			<name>validatorMessage</name>
		</attribute>
		<attribute>
			<description>A MethodExpression executed when the UIInput component's value changes</description>
			<name>valueChangeListener</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true the JSf lifecycle will end at the process validations stage and return an error to the view if value of the component is null</description>
			<name>required</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed when the component's value is required and fails validation</description>
			<name>requiredMessage</name>
		</attribute>
		<attribute>
			<description>A ValueExpression for rendering the component's label</description>
			<name>label</name>
		</attribute>
		<attribute>
			<description>The HTML blur event handler. This attribute can hold ValueExpressions</description>
			<name>onblur</name>
		</attribute>
		<attribute>
			<description>The HTML change event handler. This attribute can hold ValueExpressions</description>
			<name>onchange</name>
		</attribute>
		<attribute>
			<description>The HTML focus event handler. This attribute can hold ValueExpressions</description>
			<name>onfocus</name>
		</attribute>
		<attribute>
			<description>The HTML click event handler. This attribute can hold ValueExpressions</description>
			<name>onclick</name>
		</attribute>
		<attribute>
			<description>The HTML double click event handler. This attribute can hold ValueExpressions</description>
			<name>ondblclick</name>
		</attribute>
		<attribute>
			<description>The HTML key down event handler. This attribute can hold ValueExpressions</description>
			<name>onkeydown</name>
		</attribute>
		<attribute>
			<description>The HTML key press event handler. This attribute can hold ValueExpressions</description>
			<name>onkeypress</name>
		</attribute>
		<attribute>
			<description>The HTML key up event handler. This attribute can hold ValueExpressions</description>
			<name>onkeyup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse down event handler. This attribute can hold ValueExpressions</description>
			<name>onmousedown</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmousemove</name>
		</attribute>
		<attribute>
			<description>The HTML mouse out event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseout</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseover</name>
		</attribute>
		<attribute>
			<description>The HTML mouse wheel event handler. This attribute can hold ValueExpressions</description>
			<name>onmousewheel</name>
		</attribute>
		<attribute>
			<description>The HTML mouse enter event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseenter</name>
		</attribute>
		<attribute>
			<description>The HTML mouse leave event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseleave</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" attribute of the HTML tag</description>
			<name>style</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" attribute of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "style" attribute of the div HTML tag that wraps the element</description>
			<name>mainStyle</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "class" attribute of the div HTML tag that wraps the element</description>
			<name>mainClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "title" attribute of the HTML tag</description>
			<name>title</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the tab index of this component. A tab index is the value used 
				to determine the order in which input components will be navigated in an HTML form when the 'Tab' key is pressed. 
				A smaller value gives higher priority i.e. a tab index of 1 means it will be the first input to be navigated to, an index of 2
				means it will be the second input to be navigated to and so on
			</description>
			<name>tabindex</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true the JSf lifecycle will end at the process validations stage and return an error to the view if value of the component is null</description>
			<name>required</name>
		</attribute>
		<attribute>
			<description>The target for the overlay during AJAX calls. Used by the onevent handler of f:ajax to find the right target to overlay</description>
			<name>data-overlay-target</name>
		</attribute>
		<attribute>
			<description>A ValueExpression for disabling the UInput component</description>
			<name>disabled</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>column</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.bootcolumn</component-type>
			<renderer-type>com.quakearts.bootstrap.bootcolumn.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootColumnHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>Number of Bootstrap columns spans (1-12) this element will have for extra small screens (less than 768px)</description>
			<name>xs</name>
		</attribute>
		<attribute>
			<description>Number of Bootstrap columns spans (1-12) this element will haverender for small screens (between 768px and 992px)</description>
			<name>sm</name>
		</attribute>
		<attribute>
			<description>Number of Bootstrap columns spans (1-12) this element will haverender for mid sized screens (between 992px and 1170px)</description>
			<name>md</name>
		</attribute>
		<attribute>
			<description>Number of Bootstrap columns spans (1-12) this element will haverender for large screens (greater than 1170px)</description>
			<name>lg</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" attribute of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" attribute of the HTML tag</description>
			<name>style</name>
		</attribute>
		<attribute>
			<description>Number of Bootstrap columns spans (1-12) to offset this element for extra small screens (less than 768px)</description>
			<name>offsetxs</name>
		</attribute>
		<attribute>
			<description>Number of Bootstrap columns spans (1-12) to offset this element for small screens (between 768px and 992px)</description>
			<name>offsetsm</name>
		</attribute>
		<attribute>
			<description>Number of Bootstrap columns spans (1-12) to offset this element for mid sized screens (between 992px and 1170px)</description>
			<name>offsetmd</name>
		</attribute>
		<attribute>
			<description>Number of Bootstrap columns spans (1-12) to offset this element for large screens (greater than 1170px)</description>
			<name>offsetlg</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>button</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.btn</component-type>
			<renderer-type>com.quakearts.bootstrap.btn.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that holds the UIOutput or UIInput component's value</description>
			<name>value</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Converter implementation for converting the UIInput or UIOutput component's value</description>
			<name>converter</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to the error message to be displayed on a conversion error</description>
			<name>converterMessage</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to the bootstrap button type to render</description>
			<name>displayType</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to the image to render on the button</description>
			<name>image</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" attribute of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to the button type to render. One of 'submit' or 'button'</description>
			<name>type</name>
		</attribute>
		<attribute>
			<description>A MethodExpression of a managed bean method to execute when an ActionEvent is triggered. The method must have the signature 'void methodName(ActionEvent)' </description>
			<name>actionListener</name>
		</attribute>
		<attribute>
			<description>A MethodExpression of a managed bean method to execute when this button is pressed. The method must have the signature 'void methodName()' </description>
			<name>action</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to the a string to be rendered as the HTML 'accesskey' attribute of the component</description>
			<name>accesskey</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to the a string to be rendered as the HTML 'alt' attribute of the component</description>
			<name>alt</name>
		</attribute>
		<attribute>
			<description>HTML attribute for internationalization support. Indicates the writing direction of the components text</description>
			<name>dir</name>
		</attribute>
		<attribute>
			<description>HTML attribute used to declare the language of a Web page or a portion of a Web page</description>
			<name>lang</name>
		</attribute>
		<attribute>
			<description>The HTML blur event handler. This attribute can hold ValueExpressions</description>
			<name>onblur</name>
		</attribute>
		<attribute>
			<description>The HTML change event handler. This attribute can hold ValueExpressions</description>
			<name>onchange</name>
		</attribute>
		<attribute>
			<description>The HTML double click event handler. This attribute can hold ValueExpressions</description>
			<name>ondblclick</name>
		</attribute>
		<attribute>
			<description>The HTML focus event handler. This attribute can hold ValueExpressions</description>
			<name>onfocus</name>
		</attribute>
		<attribute>
			<description>The HTML key down event handler. This attribute can hold ValueExpressions</description>
			<name>onkeydown</name>
		</attribute>
		<attribute>
			<description>The HTML key press event handler. This attribute can hold ValueExpressions</description>
			<name>onkeypress</name>
		</attribute>
		<attribute>
			<description>The HTML key up event handler. This attribute can hold ValueExpressions</description>
			<name>onkeyup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse down event handler. This attribute can hold ValueExpressions</description>
			<name>onmousedown</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmousemove</name>
		</attribute>
		<attribute>
			<description>The HTML mouse out event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseout</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseover</name>
		</attribute>
		<attribute>
			<description>The HTML mouse up event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse wheel event handler. This attribute can hold ValueExpressions</description>
			<name>onmousewheel</name>
		</attribute>
		<attribute>
			<description>The HTML mouse enter event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseenter</name>
		</attribute>
		<attribute>
			<description>The HTML mouse leave event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseleave</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" attribute of the HTML tag</description>
			<name>style</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the tab index of this component. A tab index is the value used 
				to determine the order in which input components will be navigated in an HTML form when the 'Tab' key is pressed. 
				A smaller value gives higher priority i.e. a tab index of 1 means it will be the first input to be navigated to, an index of 2
				means it will be the second input to be navigated to and so on
			</description>
			<name>tabindex</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "title" attribute of the HTML tag</description>
			<name>title</name>
		</attribute>
		<attribute>
			<description>A ValueExpression for disabling the UInput component</description>
			<name>disabled</name>
		</attribute>
		<attribute>
			<description>The target for the overlay during AJAX calls. Used by the onevent handler of f:ajax to find the right target to overlay</description>
			<name>data-overlay-target</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>container</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.bootcontainer</component-type>
			<renderer-type>com.quakearts.bootstrap.bootcontainer.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a Boolean. Controls the rendering of Bootstrap 'navbar-fluid' css class in hte 'class' attribute</description>
			<name>fluid</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" attribute of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" attribute of the HTML tag</description>
			<name>style</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>date</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.date</component-type>
			<renderer-type>com.quakearts.bootstrap.date.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that holds the UIOutput or UIInput component's value</description>
			<name>value</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Converter implementation for converting the UIInput or UIOutput component's value</description>
			<name>converter</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a conversion error</description>
			<name>converterMessage</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Validator implementation for validating the UIInput component's value</description>
			<name>validator</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a validator error</description>
			<name>validatorMessage</name>
		</attribute>
		<attribute>
			<description>A MethodExpression executed when the UIInput component's value changes</description>
			<name>valueChangeListener</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true the JSf lifecycle will end at the process validations stage and return an error to the view if value of the component is null</description>
			<name>required</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed when the component's value is required and fails validation</description>
			<name>requiredMessage</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a number (maximum of 9) 
				indicating the number of years before the current year to display in the year 
				component of the date element. Values greater then 9 will trigger the infinite date styling.
				Infinite date styling renders a text box in the year component that accepts variable years.
				If the max attribute is also specified, it becomes the range of year values to show. In that instance,
				the maximum is 9 minus the value of the max attribute. If min attribute plus max attribute is greater than 9,
				infinite date styling is triggered.
			</description>
			<name>min</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a number (maximum of 9) 
				indicating the number of years after the current year to display in the year 
				component of the date element. Values greater then 9 will trigger the infinite date styling.
				Infinite date styling renders a text box in the year component that accepts variable years.
				If the min attribute is also specified, it becomes the range of year values to show. In that instance,
				the maximum is 9 minus the value of the min attribute. If min attribute plus max attribute is greater than 9,
				infinite date styling is triggered.
			</description>
			<name>max</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a string which controls the format of the date the input component will generate.
				Valid values are d (day only), dm (day/month), my (month/year), y (year) and dmy (date/month/year)
			</description>
			<name>format</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a Boolean indicating whether the date can be null
			</description>
			<name>nullable</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" attribute of the day button HTML tag</description>
			<name>dayClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" attribute of the month button HTML tag</description>
			<name>monthClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" attribute of the year button HTML tag</description>
			<name>yearClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the Bootstrap day button type</description>
			<name>dayType</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the Bootstrap month button type</description>
			<name>monthType</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the Bootstrap year button type</description>
			<name>yearType</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the Bootstrap hour button type</description>
			<name>hourType</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the Bootstrap minute button type</description>
			<name>minuteType</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the Bootstrap second button type</description>
			<name>secondType</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" attribute of the enclosing div</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" attribute of the enclosing div</description>
			<name>style</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true the JSf lifecycle will end at the process validations stage and return an error to the view if value of the component is null</description>
			<name>required</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to an integer which will be added or subtracted from the hour whenever the increment/decrement controls are clicked </description>
			<name>hourStep</name>
		</attribute>		
		<attribute>
			<description>A ValueExpression that evaluates to an integer which will be added or subtracted from the minute whenever the increment/decrement controls are clicked </description>
			<name>minuteStep</name>
		</attribute>		
		<attribute>
			<description>A ValueExpression that evaluates to an integer which will be added or subtracted from the second whenever the increment/decrement controls are clicked </description>
			<name>secondStep</name>
		</attribute>		
		<attribute>
			<description>A ValueExpression that evaluates to a boolean to determine if the time will be in 24 hour or 12 hour format </description>
			<name>timeIs24hour</name>
		</attribute>		
		<attribute>
			<description>The target for the overlay during AJAX calls. Used by the onevent handler of f:ajax to find the right target to overlay</description>
			<name>data-overlay-target</name>
		</attribute>
		<attribute>
			<description>The HTML mouse down event handler. This attribute can hold ValueExpressions</description>
			<name>onmousedown</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmousemove</name>
		</attribute>
		<attribute>
			<description>The HTML mouse out event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseout</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseover</name>
		</attribute>
		<attribute>
			<description>The HTML mouse up event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse wheel event handler. This attribute can hold ValueExpressions</description>
			<name>onmousewheel</name>
		</attribute>
		<attribute>
			<description>The HTML mouse enter event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseenter</name>
		</attribute>
		<attribute>
			<description>The HTML mouse leave event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseleave</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>menu</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.menu</component-type>
			<renderer-type>com.quakearts.bootstrap.menu.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that holds the UIOutput or UIInput component's value</description>
			<name>value</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Converter implementation for converting the UIInput or UIOutput component's value</description>
			<name>converter</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the error message to be displayed on a conversion error</description>
			<name>converterMessage</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the bootstrap button type</description>
			<name>displayType</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the menu type. One of 'default' or 'navbar'. 
				'default' renders a standalone drop down menu. 'navbar' renders a navigation bar drop down menu
			</description>
			<name>type</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" attribute of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" attribute of the HTML tag</description>
			<name>style</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to true or false. A true value indicates that the menu should be 
				wrapped in a Bootstrap Button Group container.
			</description>
			<name>no-group</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to true or false. A true value indicates that the menu render as a drop-up
			</description>
			<name>dropup</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>fileinput</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.fileinput</component-type>
			<renderer-type>com.quakearts.bootstrap.fileinput.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootFileInputHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to list the component ids of components that should be re-rendered.</description>
			<name>render</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to list the component ids of components that should be executed.</description>
			<name>execute</name>
		</attribute>
		<attribute>
			<description>A ValueExpression for rendering the component's label</description>
			<name>label</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>The ValueExpression for triggering javascript upon execution of the components AJAX event</description>
			<name>onevent</name>
		</attribute>
		<attribute>
			<description>The ValueExpression for triggering javascript upon failure to execute the components AJAX event</description>
			<name>onerror</name>
		</attribute>
		<attribute>
			<description>The ValueExpression for triggering javascript upon failure to execute the components AJAX event</description>
			<name>accept</name>
			<required>true</required>
		</attribute>
		<attribute>
			<description>The ValueExpression linking to a backing bean property of type byte[] for holding inputed data</description>
			<name>data</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking to a backing bean property of type String for holding the uploaded filename</description>
			<name>name</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that holds the UIOutput or UIInput component's value</description>
			<name>value</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean to determine if multiple file uploads are allowed</description>
			<name>allowMultiple</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" attribute of the HTML tag</description>
			<name>style</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" attribute of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true the JSf lifecycle will end at the process validations stage and return an error to the view if value of the component is null</description>
			<name>required</name>
		</attribute>
		<attribute>
			<description>The target for the overlay during AJAX calls. Used by the onevent handler of f:ajax to find the right target to overlay</description>
			<name>data-overlay-target</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>form</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.form</component-type>
			<renderer-type>com.quakearts.bootstrap.form.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "target" attribute of the HTML tag</description>
			<name>target</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "accept" attribute of the HTML tag</description>
			<name>accept</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "acceptcharset" attribute of the HTML tag</description>
			<name>acceptcharset</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "enctype" attribute of the HTML tag</description>
			<name>enctype</name>
		</attribute>
		<attribute>
			<description>HTML attribute for internationalization support. Indicates the writing direction of the components text</description>
			<name>dir</name>
		</attribute>
		<attribute>
			<description>HTML attribute used to declare the language of a Web page or a portion of a Web page</description>
			<name>lang</name>
		</attribute>
		<attribute>
			<description>The HTML click event handler. This attribute can hold ValueExpressions</description>
			<name>onclick</name>
		</attribute>
		<attribute>
			<description>The HTML double click event handler. This attribute can hold ValueExpressions</description>
			<name>ondblclick</name>
		</attribute>
		<attribute>
			<description>The HTML key down event handler. This attribute can hold ValueExpressions</description>
			<name>onkeydown</name>
		</attribute>
		<attribute>
			<description>The HTML key press event handler. This attribute can hold ValueExpressions</description>
			<name>onkeypress</name>
		</attribute>
		<attribute>
			<description>The HTML key up event handler. This attribute can hold ValueExpressions</description>
			<name>onkeyup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse down event handler. This attribute can hold ValueExpressions</description>
			<name>onmousedown</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmousemove</name>
		</attribute>
		<attribute>
			<description>The HTML mouse out event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseout</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseover</name>
		</attribute>
		<attribute>
			<description>The HTML mouse wheel event handler. This attribute can hold ValueExpressions</description>
			<name>onmousewheel</name>
		</attribute>
		<attribute>
			<description>The HTML mouse enter event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseenter</name>
		</attribute>
		<attribute>
			<description>The HTML mouse leave event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseleave</name>
		</attribute>
		<attribute>
			<description>The HTML form reset event handler. This attribute can hold ValueExpressions</description>
			<name>onreset</name>
		</attribute>
		<attribute>
			<description>The HTML form submission event handler. This attribute can hold ValueExpressions</description>
			<name>onsubmit</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" attribute of the HTML tag</description>
			<name>style</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" attribute of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "title" attribute of the HTML tag</description>
			<name>title</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the form type. One of 'default' or 'horizontal'. 
				'horizontal' renders a horizontal form. 'navbar' renders a navigation bar form
			</description>
			<name>type</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>formGroup</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.formgroup</component-type>
			<renderer-type>com.quakearts.bootstrap.formgroup.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" attribute of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" attribute of the HTML tag</description>
			<name>style</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>glyph</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.glyph</component-type>
			<renderer-type>com.quakearts.bootstrap.glyph.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to the name of the glyphicon to be rendered</description>
			<name>value</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" attribute of the HTML tag</description>
			<name>style</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" attribute of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "title" attribute of the HTML tag</description>
			<name>title</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Converter implementation for converting the UIInput or UIOutput component's value</description>
			<name>converter</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a conversion error</description>
			<name>converterMessage</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>flaticon</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.flaticon</component-type>
			<renderer-type>com.quakearts.bootstrap.flaticon.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to the name of the flaticon to be rendered</description>
			<name>value</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" attribute of the HTML tag</description>
			<name>style</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" attribute of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "title" attribute of the HTML tag</description>
			<name>title</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Converter implementation for converting the UIInput or UIOutput component's value</description>
			<name>converter</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a conversion error</description>
			<name>converterMessage</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>fa</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.fontawesome</component-type>
			<renderer-type>com.quakearts.bootstrap.fontawesome.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to the name of the glyphicon to be rendered</description>
			<name>value</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" attribute of the HTML tag</description>
			<name>style</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" attribute of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "title" attribute of the HTML tag</description>
			<name>title</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Converter implementation for converting the UIInput or UIOutput component's value</description>
			<name>converter</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a conversion error</description>
			<name>converterMessage</name>
		</attribute>
	</tag>	
	<tag>
		<tag-name>inputText</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.textinput</component-type>
			<renderer-type>com.quakearts.bootstrap.textinput.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that holds the UIOutput or UIInput component's value</description>
			<name>value</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Converter implementation for converting the UIInput or UIOutput component's value</description>
			<name>converter</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a conversion error</description>
			<name>converterMessage</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Validator implementation for validating the UIInput component's value</description>
			<name>validator</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a validator error</description>
			<name>validatorMessage</name>
		</attribute>
		<attribute>
			<description>A MethodExpression executed when the UIInput component's value changes</description>
			<name>valueChangeListener</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true the JSf lifecycle will end at the process validations stage and return an error to the view if value of the component is null</description>
			<name>required</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed when the component's value is required and fails validation</description>
			<name>requiredMessage</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true the JSf lifecycle 
				processes component in the Apply Request Values Phases and skips other Phases if required by the component.
				This makes it possible to implement a cancel button for instance that ignores other component values 
			</description>
			<name>immediate</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "accesskey" attribute of the HTML tag</description>
			<name>accesskey</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "alt" attribute of the HTML tag</description>
			<name>alt</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "autocomplete" attribute of the HTML tag</description>
			<name>autocomplete</name>
		</attribute>
		<attribute>
			<description>HTML attribute for internationalization support. Indicates the writing direction of the components text</description>
			<name>dir</name>
		</attribute>
		<attribute>
			<description>HTML attribute used to declare the language of a Web page or a portion of a Web page</description>
			<name>lang</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true the JSf lifecycle will end at the process validations stage and return an error to the view if value of the component is null</description>
			<name>required</name>
		</attribute>
		<attribute>
			<description>A ValueExpression for rendering the component's label</description>
			<name>label</name>
		</attribute>
		<attribute>
			<description>The maximum number of characters this input can take</description>
			<name>maxlength</name>
		</attribute>
		<attribute>
			<description>The HTML blur event handler. This attribute can hold ValueExpressions</description>
			<name>onblur</name>
		</attribute>
		<attribute>
			<description>The HTML change event handler. This attribute can hold ValueExpressions</description>
			<name>onchange</name>
		</attribute>
		<attribute>
			<description>The HTML focus event handler. This attribute can hold ValueExpressions</description>
			<name>onfocus</name>
		</attribute>
		<attribute>
			<description>The HTML click event handler. This attribute can hold ValueExpressions</description>
			<name>onclick</name>
		</attribute>
		<attribute>
			<description>The HTML double click event handler. This attribute can hold ValueExpressions</description>
			<name>ondblclick</name>
		</attribute>
		<attribute>
			<description>The HTML key down event handler. This attribute can hold ValueExpressions</description>
			<name>onkeydown</name>
		</attribute>
		<attribute>
			<description>The HTML key press event handler. This attribute can hold ValueExpressions</description>
			<name>onkeypress</name>
		</attribute>
		<attribute>
			<description>The HTML key up event handler. This attribute can hold ValueExpressions</description>
			<name>onkeyup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse down event handler. This attribute can hold ValueExpressions</description>
			<name>onmousedown</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmousemove</name>
		</attribute>
		<attribute>
			<description>The HTML mouse out event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseout</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseover</name>
		</attribute>
		<attribute>
			<description>The HTML mouse wheel event handler. This attribute can hold ValueExpressions</description>
			<name>onmousewheel</name>
		</attribute>
		<attribute>
			<description>The HTML mouse enter event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseenter</name>
		</attribute>
		<attribute>
			<description>The HTML mouse leave event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseleave</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" attribute of the HTML tag</description>
			<name>style</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" attribute of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "title" attribute of the HTML tag</description>
			<name>title</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true this component will be set to read only and will ignore submitted values</description>
			<name>readonly</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "size" attribute of the HTML tag</description>
			<name>size</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the tab index of this component. A tab index is the value used 
				to determine the order in which input components will be navigated in an HTML form when the 'Tab' key is pressed. 
				A smaller value gives higher priority i.e. a tab index of 1 means it will be the first input to be navigated to, an index of 2
				means it will be the second input to be navigated to and so on
			</description>
			<name>tabindex</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "placeholder" attribute of the HTML tag</description>
			<name>placeholder</name>
		</attribute>
		<attribute>
			<description>The target for the overlay during AJAX calls. Used by the onevent handler of f:ajax to find the right target to overlay</description>
			<name>data-overlay-target</name>
		</attribute>
		<attribute>
			<description>A ValueExpression for disabling the UInput component</description>
			<name>disabled</name>
		</attribute>
		<attribute>
			<description>The input type of this element. Can be any HTML5 input type attribute value</description>
			<name>type</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>label</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.label</component-type>
			<renderer-type>com.quakearts.bootstrap.label.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" attribute of the HTML tag</description>
			<name>style</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" attribute of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that holds the UIOutput or UIInput component's value</description>
			<name>value</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Converter implementation for converting the UIInput or UIOutput component's value</description>
			<name>converter</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a conversion error</description>
			<name>converterMessage</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to the bootstrap label type to render</description>
			<name>type</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>messages</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.messages</component-type>
			<renderer-type>com.quakearts.bootstrap.messages.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true info messages will be rendered using the Bootstrap 'Success' alert type</description>
			<name>successMessage</name>
		</attribute>
		<attribute>
			<description>The ValueExpression that evaluates to the ID of the component that is the target of the messages</description>
			<name>for</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true only global messages will be rendered. Overrides the 'for' attribute</description>
			<name>globalOnly</name>
		</attribute>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true error details will be rendered</description>
			<name>showDetail</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true error summary will be rendered. Defaults to 'true'</description>
			<name>showSummary</name>
		</attribute>
		<attribute>
			<description>HTML attribute for internationalization support. Indicates the writing direction of the components text</description>
			<name>dir</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to the css class to apply to error messages</description>
			<name>errorClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" attribute of the HTML tag of the error message</description>
			<name>errorStyle</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to the css class to apply to fatal messages</description>
			<name>fatalClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" attribute of the HTML tag of the fatal message</description>
			<name>fatalStyle</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to the css class to apply to info messages</description>
			<name>infoClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" attribute of the HTML tag of the info message</description>
			<name>infoStyle</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to the css class to apply to warning messages</description>
			<name>warnClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" attribute of the HTML tag of the warning message</description>
			<name>warnStyle</name>
		</attribute>
		<attribute>
			<description>HTML attribute used to declare the language of a Web page or a portion of a Web page</description>
			<name>lang</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" attribute of the HTML tag</description>
			<name>style</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" attribute of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true the summary of the error message will be written as the 'title' tooltip of the HTML tag</description>
			<name>tooltip</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true the error message is dismissible</description>
			<name>dismissible</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>nav</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.nav</component-type>
			<renderer-type>com.quakearts.bootstrap.nav.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true the navigation elements will be stacked i.e.
			 displayed horizontally. Only works when the attribute 'type' is 'pills'
			</description>
			<name>stacked</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true the navigation elements will justified. Only works when attribute 'stacked' is true</description>
			<name>justified</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to the Bootstrap nav type to render. One of 'bar', 'pills' or none</description>
			<name>type</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" attribute of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>The HTML click event handler. This attribute can hold ValueExpressions</description>
			<name>onclick</name>
		</attribute>
		<attribute>
			<description>The HTML double click event handler. This attribute can hold ValueExpressions</description>
			<name>ondblclick</name>
		</attribute>
		<attribute>
			<description>The HTML mouse down event handler. This attribute can hold ValueExpressions</description>
			<name>onmousedown</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmousemove</name>
		</attribute>
		<attribute>
			<description>The HTML mouse out event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseout</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseover</name>
		</attribute>
		<attribute>
			<description>The HTML mouse up event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse wheel event handler. This attribute can hold ValueExpressions</description>
			<name>onmousewheel</name>
		</attribute>
		<attribute>
			<description>The HTML mouse enter event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseenter</name>
		</attribute>
		<attribute>
			<description>The HTML mouse leave event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseleave</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" attribute of the HTML tag</description>
			<name>style</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "title" attribute of the HTML tag</description>
			<name>title</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>navbar</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.navbar</component-type>
			<renderer-type>com.quakearts.bootstrap.navbar.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to the Bootstrap navbar type to render. One of 'inverse' or 'default' </description>
			<name>type</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to the Bootstrap navbar position. One of 'fixed',
			'fixed-top','fixed-bottom','static','static-top' or 'static-bottom' </description>
			<name>position</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true the navbar will behave as a Bootstrap fluid navbar</description>
			<name>fluid</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true the navbar will behave as a Bootstrap responsive navbar</description>
			<name>responsive</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" attribute of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" attribute of the HTML tag</description>
			<name>style</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>panel</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.outputpanel</component-type>
			<renderer-type>com.quakearts.bootstrap.outputpanel.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to the Bootstrap panel type to render.</description>
			<name>type</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" attribute of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>The HTML click event handler. This attribute can hold ValueExpressions</description>
			<name>onclick</name>
		</attribute>
		<attribute>
			<description>The HTML double click event handler. This attribute can hold ValueExpressions</description>
			<name>ondblclick</name>
		</attribute>
		<attribute>
			<description>The HTML mouse down event handler. This attribute can hold ValueExpressions</description>
			<name>onmousedown</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmousemove</name>
		</attribute>
		<attribute>
			<description>The HTML mouse out event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseout</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseover</name>
		</attribute>
		<attribute>
			<description>The HTML mouse up event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse wheel event handler. This attribute can hold ValueExpressions</description>
			<name>onmousewheel</name>
		</attribute>
		<attribute>
			<description>The HTML mouse enter event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseenter</name>
		</attribute>
		<attribute>
			<description>The HTML mouse leave event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseleave</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" attribute of the HTML tag</description>
			<name>style</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "title" attribute of the HTML tag</description>
			<name>title</name>
		</attribute>
		<attribute>
			<description>Activate pop-up behavior</description>
			<name>popup</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>pagination</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.pagination</component-type>
			<renderer-type>com.quakearts.bootstrap.pagination.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootPaginationHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>The ValueExpression that evaluates to an integer. Determines the number of data-table rows to render per page</description>
			<name>pageSize</name>
		</attribute>
		<attribute>
			<description>The ValueExpression that evaluates to an integer. The maximum number of page navigation buttons to display. Defaults to 5</description>
			<name>maxPages</name>
		</attribute>
		<attribute>
			<description>The ValueExpression that evaluates to the ID of the data table component this paginator is tied to</description>
			<name>for</name>
		</attribute>
		<attribute>
			<description>The ValueExpression for triggering javascript upon execution of the components AJAX event</description>
			<name>onevent</name>
		</attribute>
		<attribute>
			<description>The ValueExpression for triggering javascript upon failure to execute the components AJAX event</description>
			<name>onerror</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to list the component ids of components that should be re-rendered.</description>
			<name>render</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to list the component ids of components that should be executed.</description>
			<name>execute</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" attribute of the HTML tag</description>
			<name>style</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" attribute of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. If true, the pagination will be reset to page 1</description>
			<name>reset</name>
		</attribute>
		<attribute>
			<description>The target for the overlay during AJAX calls. Used by the onevent handler of f:ajax to find the right target to overlay</description>
			<name>data-overlay-target</name>
		</attribute>
		<attribute>
			<description>The HTML mouse down event handler. This attribute can hold ValueExpressions</description>
			<name>onmousedown</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmousemove</name>
		</attribute>
		<attribute>
			<description>The HTML mouse out event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseout</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseover</name>
		</attribute>
		<attribute>
			<description>The HTML mouse up event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse wheel event handler. This attribute can hold ValueExpressions</description>
			<name>onmousewheel</name>
		</attribute>
		<attribute>
			<description>The HTML mouse enter event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseenter</name>
		</attribute>
		<attribute>
			<description>The HTML mouse leave event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseleave</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>row</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.bootrow</component-type>
			<renderer-type>com.quakearts.bootstrap.bootrow.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" attribute of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" attribute of the HTML tag</description>
			<name>style</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>selectManyListbox</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.selectManyListBox</component-type>
			<renderer-type>com.quakearts.bootstrap.select.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that holds the UIOutput or UIInput component's value</description>
			<name>value</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Converter implementation for converting the UIInput or UIOutput component's value</description>
			<name>converter</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a conversion error</description>
			<name>converterMessage</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Validator implementation for validating the UIInput component's value</description>
			<name>validator</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a validator error</description>
			<name>validatorMessage</name>
		</attribute>
		<attribute>
			<description>A MethodExpression executed when the UIInput component's value changes</description>
			<name>valueChangeListener</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true the JSf lifecycle will end at the process validations stage and return an error to the view if value of the component is null</description>
			<name>required</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed when the component's value is required and fails validation</description>
			<name>requiredMessage</name>
		</attribute>
		<attribute>
			<description>A string indicating the java.util.Collecton implementation class of the component's value</description>
			<name>collectionType</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine the processing of javax.faces.component.SelectItem's marked as a hideNoSelection. A value of true prevents such components from being rendered</description>
			<name>hideNoSelectionOption</name>
		</attribute>
		<attribute>
			<description>HTML attribute for internationalization support. Indicates the writing direction of the components text</description>
			<name>dir</name>
		</attribute>
		<attribute>
			<description>HTML attribute used to declare the language of a Web page or a portion of a Web page</description>
			<name>lang</name>
		</attribute>
		<attribute>
			<description>A ValueExpression for rendering the component's label</description>
			<name>label</name>
		</attribute>
		<attribute>
			<description>The HTML blur event handler. This attribute can hold ValueExpressions</description>
			<name>onblur</name>
		</attribute>
		<attribute>
			<description>The HTML change event handler. This attribute can hold ValueExpressions</description>
			<name>onchange</name>
		</attribute>
		<attribute>
			<description>The HTML focus event handler. This attribute can hold ValueExpressions</description>
			<name>onfocus</name>
		</attribute>
		<attribute>
			<description>The HTML click event handler. This attribute can hold ValueExpressions</description>
			<name>onclick</name>
		</attribute>
		<attribute>
			<description>The HTML double click event handler. This attribute can hold ValueExpressions</description>
			<name>ondblclick</name>
		</attribute>
		<attribute>
			<description>The HTML key down event handler. This attribute can hold ValueExpressions</description>
			<name>onkeydown</name>
		</attribute>
		<attribute>
			<description>The HTML key press event handler. This attribute can hold ValueExpressions</description>
			<name>onkeypress</name>
		</attribute>
		<attribute>
			<description>The HTML key up event handler. This attribute can hold ValueExpressions</description>
			<name>onkeyup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse down event handler. This attribute can hold ValueExpressions</description>
			<name>onmousedown</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmousemove</name>
		</attribute>
		<attribute>
			<description>The HTML mouse out event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseout</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseover</name>
		</attribute>
		<attribute>
			<description>The HTML mouse wheel event handler. This attribute can hold ValueExpressions</description>
			<name>onmousewheel</name>
		</attribute>
		<attribute>
			<description>The HTML mouse enter event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseenter</name>
		</attribute>
		<attribute>
			<description>The HTML mouse leave event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseleave</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "style" attribute of the main HTML div of the rendered component</description>
			<name>mainStyle</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "class" attribute of the main HTML div of the rendered component</description>
			<name>mainClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "style" attribute of the HTML div of the select portion of the rendered component</description>
			<name>selectStyle</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "class" attribute of the HTML div of the select portion of the rendered component</description>
			<name>selectClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "title" attribute of the HTML tag</description>
			<name>title</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true this component will be set to read only and will ignore submitted values</description>
			<name>readonly</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to an integer. Determines the number of list items to render at a time. Only works when the attribute 'limit' is true</description>
			<name>size</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true this component will limit the number of items displayed in the list</description>
			<name>limit</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the tab index of this component. A tab index is the value used 
				to determine the order in which input components will be navigated in an HTML form when the 'Tab' key is pressed. 
				A smaller value gives higher priority i.e. a tab index of 1 means it will be the first input to be navigated to, an index of 2
				means it will be the second input to be navigated to and so on
			</description>
			<name>tabindex</name>
		</attribute>
		<attribute>
			<description>The target for the overlay during AJAX calls. Used by the onevent handler of f:ajax to find the right target to overlay</description>
			<name>data-overlay-target</name>
		</attribute>
		<attribute>
			<description>A ValueExpression for disabling the UInput component</description>
			<name>disabled</name>
		</attribute>		
	</tag>
	<tag>
		<tag-name>selectManyMenu</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.selectManyMenu</component-type>
			<renderer-type>com.quakearts.bootstrap.select.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootSelectMenuHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that holds the UIOutput or UIInput component's value</description>
			<name>value</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Converter implementation for converting the UIInput or UIOutput component's value</description>
			<name>converter</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a conversion error</description>
			<name>converterMessage</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Validator implementation for validating the UIInput component's value</description>
			<name>validator</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a validator error</description>
			<name>validatorMessage</name>
		</attribute>
		<attribute>
			<description>A MethodExpression executed when the UIInput component's value changes</description>
			<name>valueChangeListener</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true the JSf lifecycle will end at the process validations stage and return an error to the view if value of the component is null</description>
			<name>required</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed when the component's value is required and fails validation</description>
			<name>requiredMessage</name>
		</attribute>
		<attribute>
			<description>A string indicating the java.util.Collecton implementation class of the component's value</description>
			<name>collectionType</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine the processing of javax.faces.component.SelectItem's marked as a hideNoSelection. A value of true prevents such components from being rendered</description>
			<name>hideNoSelectionOption</name>
		</attribute>
		<attribute>
			<description>HTML attribute for internationalization support. Indicates the writing direction of the components text</description>
			<name>dir</name>
		</attribute>
		<attribute>
			<description>HTML attribute used to declare the language of a Web page or a portion of a Web page</description>
			<name>lang</name>
		</attribute>
		<attribute>
			<description>A ValueExpression for rendering the component's label</description>
			<name>label</name>
		</attribute>
		<attribute>
			<description>The HTML blur event handler. This attribute can hold ValueExpressions</description>
			<name>onblur</name>
		</attribute>
		<attribute>
			<description>The HTML change event handler. This attribute can hold ValueExpressions</description>
			<name>onchange</name>
		</attribute>
		<attribute>
			<description>The HTML focus event handler. This attribute can hold ValueExpressions</description>
			<name>onfocus</name>
		</attribute>
		<attribute>
			<description>The HTML click event handler. This attribute can hold ValueExpressions</description>
			<name>onclick</name>
		</attribute>
		<attribute>
			<description>The HTML double click event handler. This attribute can hold ValueExpressions</description>
			<name>ondblclick</name>
		</attribute>
		<attribute>
			<description>The HTML key down event handler. This attribute can hold ValueExpressions</description>
			<name>onkeydown</name>
		</attribute>
		<attribute>
			<description>The HTML key press event handler. This attribute can hold ValueExpressions</description>
			<name>onkeypress</name>
		</attribute>
		<attribute>
			<description>The HTML key up event handler. This attribute can hold ValueExpressions</description>
			<name>onkeyup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse down event handler. This attribute can hold ValueExpressions</description>
			<name>onmousedown</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmousemove</name>
		</attribute>
		<attribute>
			<description>The HTML mouse out event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseout</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseover</name>
		</attribute>
		<attribute>
			<description>The HTML mouse wheel event handler. This attribute can hold ValueExpressions</description>
			<name>onmousewheel</name>
		</attribute>
		<attribute>
			<description>The HTML mouse enter event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseenter</name>
		</attribute>
		<attribute>
			<description>The HTML mouse leave event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseleave</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "title" attribute of the HTML tag</description>
			<name>title</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true this component will be set to read only and will ignore submitted values</description>
			<name>readonly</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to an integer. Determines the number of list items to render at a time. Only works when the attribute 'limit' is true</description>
			<name>size</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true this component will limit the number of items displayed in the list</description>
			<name>limit</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the tab index of this component. A tab index is the value used 
				to determine the order in which input components will be navigated in an HTML form when the 'Tab' key is pressed. 
				A smaller value gives higher priority i.e. a tab index of 1 means it will be the first input to be navigated to, an index of 2
				means it will be the second input to be navigated to and so on
			</description>
			<name>tabindex</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to the Bootstrap button type to render</description>
			<name>displayType</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true the rendered HTML will fill the entire container</description>
			<name>fill</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true the selections will be auto-completable</description>
			<name>autocomplete</name>
		</attribute>
		<attribute>
			<description>A MethodExpression executed when the UIInput component's auto-complete value changes</description>
			<name>listener</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to list the component ids of components that should be re-rendered.</description>
			<name>render</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to list the component ids of components that should be executed.</description>
			<name>execute</name>
		</attribute>
		<attribute>
			<description>The ValueExpression for triggering javascript upon execution of the components AJAX event</description>
			<name>onevent</name>
		</attribute>
		<attribute>
			<description>The ValueExpression for triggering javascript upon failure to execute the components AJAX event</description>
			<name>onerror</name>
		</attribute>
		<attribute>
			<description>The ValueExpression that links to a backing bean to hold the auto-complete suggestion value</description>
			<name>suggestion</name>
		</attribute>
		<attribute>
			<description>The ValueExpression that evaluates to a double. Determines the time in seconds before the auto-complete suggestion is submitted.
				 Can be up to 3 significant digits after the decimal point. The value is multiplied by 1000 and cast to an integer
			</description>
			<name>delay</name>
		</attribute>
		<attribute>
			<description>The ValueExpression that evaluates to an integer. Determines the minimum number of characters required before 
				triggering auto completion
			</description>
			<name>minchars</name>
		</attribute>
		<attribute>
			<description>The ValueExpression that evaluates to a boolean. When true indicates that the drop down select menu should be rendered opened</description>
			<name>opened</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "style" attribute of the main HTML div of the rendered component</description>
			<name>mainStyle</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "class" attribute of the main HTML div of the rendered component</description>
			<name>mainClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "style" attribute of the HTML div of the select portion of the component</description>
			<name>selectStyle</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "class" attribute of the HTML div of the select portion of the component</description>
			<name>selectClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "style" attribute of the HTML button</description>
			<name>buttonStyle</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "class" attribute of the HTML button</description>
			<name>buttonClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "style" attribute of the HTML auto-complete input box</description>
			<name>autoStyle</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "class" attribute of the HTML auto-complete input box</description>
			<name>autoClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "style" attribute of the HTML div of the Bootstrap button group</description>
			<name>groupStyle</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "class" attribute of the HTML div of the Bootstrap button group</description>
			<name>groupClass</name>
		</attribute>
		<attribute>
			<description>The target for the overlay during AJAX calls. Used by the onevent handler of f:ajax to find the right target to overlay</description>
			<name>data-overlay-target</name>
		</attribute>
		<attribute>
			<description>A ValueExpression for disabling the UInput component</description>
			<name>disabled</name>
		</attribute>		
	</tag>
	<tag>
		<tag-name>selectOneListbox</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.selectOneListbox</component-type>
			<renderer-type>com.quakearts.bootstrap.select.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that holds the UIOutput or UIInput component's value</description>
			<name>value</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Converter implementation for converting the UIInput or UIOutput component's value</description>
			<name>converter</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a conversion error</description>
			<name>converterMessage</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Validator implementation for validating the UIInput component's value</description>
			<name>validator</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a validator error</description>
			<name>validatorMessage</name>
		</attribute>
		<attribute>
			<description>A MethodExpression executed when the UIInput component's value changes</description>
			<name>valueChangeListener</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true the JSf lifecycle will end at the process validations stage and return an error to the view if value of the component is null</description>
			<name>required</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed when the component's value is required and fails validation</description>
			<name>requiredMessage</name>
		</attribute>
		<attribute>
			<description>A string indicating the java.util.Collecton implementation class of the component's value</description>
			<name>collectionType</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine the processing of javax.faces.component.SelectItem's marked as a hideNoSelection. A value of true prevents such components from being rendered</description>
			<name>hideNoSelectionOption</name>
		</attribute>
		<attribute>
			<description>HTML attribute for internationalization support. Indicates the writing direction of the components text</description>
			<name>dir</name>
		</attribute>
		<attribute>
			<description>HTML attribute used to declare the language of a Web page or a portion of a Web page</description>
			<name>lang</name>
		</attribute>
		<attribute>
			<description>A ValueExpression for rendering the component's label</description>
			<name>label</name>
		</attribute>
		<attribute>
			<description>The HTML blur event handler. This attribute can hold ValueExpressions</description>
			<name>onblur</name>
		</attribute>
		<attribute>
			<description>The HTML change event handler. This attribute can hold ValueExpressions</description>
			<name>onchange</name>
		</attribute>
		<attribute>
			<description>The HTML focus event handler. This attribute can hold ValueExpressions</description>
			<name>onfocus</name>
		</attribute>
		<attribute>
			<description>The HTML click event handler. This attribute can hold ValueExpressions</description>
			<name>onclick</name>
		</attribute>
		<attribute>
			<description>The HTML double click event handler. This attribute can hold ValueExpressions</description>
			<name>ondblclick</name>
		</attribute>
		<attribute>
			<description>The HTML key down event handler. This attribute can hold ValueExpressions</description>
			<name>onkeydown</name>
		</attribute>
		<attribute>
			<description>The HTML key press event handler. This attribute can hold ValueExpressions</description>
			<name>onkeypress</name>
		</attribute>
		<attribute>
			<description>The HTML key up event handler. This attribute can hold ValueExpressions</description>
			<name>onkeyup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse down event handler. This attribute can hold ValueExpressions</description>
			<name>onmousedown</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmousemove</name>
		</attribute>
		<attribute>
			<description>The HTML mouse out event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseout</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseover</name>
		</attribute>
		<attribute>
			<description>The HTML mouse wheel event handler. This attribute can hold ValueExpressions</description>
			<name>onmousewheel</name>
		</attribute>
		<attribute>
			<description>The HTML mouse enter event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseenter</name>
		</attribute>
		<attribute>
			<description>The HTML mouse leave event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseleave</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "style" attribute of the main HTML div of the rendered component</description>
			<name>mainStyle</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "class" attribute of the main HTML div of the rendered component</description>
			<name>mainClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "style" attribute of the HTML div of the select portion of the rendered component</description>
			<name>selectStyle</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "class" attribute of the HTML div of the select portion of the rendered component</description>
			<name>selectClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "title" attribute of the HTML tag</description>
			<name>title</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true this component will be set to read only and will ignore submitted values</description>
			<name>readonly</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to an integer. Determines the number of list items to render at a time. Only works when the attribute 'limit' is true</description>
			<name>size</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true this component will limit the number of items displayed in the list</description>
			<name>limit</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the tab index of this component. A tab index is the value used 
				to determine the order in which input components will be navigated in an HTML form when the 'Tab' key is pressed. 
				A smaller value gives higher priority i.e. a tab index of 1 means it will be the first input to be navigated to, an index of 2
				means it will be the second input to be navigated to and so on
			</description>
			<name>tabindex</name>
		</attribute>
		<attribute>
			<description>The target for the overlay during AJAX calls. Used by the onevent handler of f:ajax to find the right target to overlay</description>
			<name>data-overlay-target</name>
		</attribute>
		<attribute>
			<description>A ValueExpression for disabling the UInput component</description>
			<name>disabled</name>
		</attribute>		
	</tag>
	<tag>
		<tag-name>selectOneMenu</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.selectOneMenu</component-type>
			<renderer-type>com.quakearts.bootstrap.select.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootSelectMenuHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that holds the UIOutput or UIInput component's value</description>
			<name>value</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Converter implementation for converting the UIInput or UIOutput component's value</description>
			<name>converter</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a conversion error</description>
			<name>converterMessage</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Validator implementation for validating the UIInput component's value</description>
			<name>validator</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a validator error</description>
			<name>validatorMessage</name>
		</attribute>
		<attribute>
			<description>A MethodExpression executed when the UIInput component's value changes</description>
			<name>valueChangeListener</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true the JSf lifecycle will end at the process validations stage and return an error to the view if value of the component is null</description>
			<name>required</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed when the component's value is required and fails validation</description>
			<name>requiredMessage</name>
		</attribute>
		<attribute>
			<description>A string indicating the java.util.Collecton implementation class of the component's value</description>
			<name>collectionType</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine the processing of javax.faces.component.SelectItem's marked as a hideNoSelection. A value of true prevents such components from being rendered</description>
			<name>hideNoSelectionOption</name>
		</attribute>
		<attribute>
			<description>HTML attribute for internationalization support. Indicates the writing direction of the components text</description>
			<name>dir</name>
		</attribute>
		<attribute>
			<description>HTML attribute used to declare the language of a Web page or a portion of a Web page</description>
			<name>lang</name>
		</attribute>
		<attribute>
			<description>A ValueExpression for rendering the component's label</description>
			<name>label</name>
		</attribute>
		<attribute>
			<description>The HTML blur event handler. This attribute can hold ValueExpressions</description>
			<name>onblur</name>
		</attribute>
		<attribute>
			<description>The HTML change event handler. This attribute can hold ValueExpressions</description>
			<name>onchange</name>
		</attribute>
		<attribute>
			<description>The HTML focus event handler. This attribute can hold ValueExpressions</description>
			<name>onfocus</name>
		</attribute>
		<attribute>
			<description>The HTML click event handler. This attribute can hold ValueExpressions</description>
			<name>onclick</name>
		</attribute>
		<attribute>
			<description>The HTML double click event handler. This attribute can hold ValueExpressions</description>
			<name>ondblclick</name>
		</attribute>
		<attribute>
			<description>The HTML key down event handler. This attribute can hold ValueExpressions</description>
			<name>onkeydown</name>
		</attribute>
		<attribute>
			<description>The HTML key press event handler. This attribute can hold ValueExpressions</description>
			<name>onkeypress</name>
		</attribute>
		<attribute>
			<description>The HTML key up event handler. This attribute can hold ValueExpressions</description>
			<name>onkeyup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse down event handler. This attribute can hold ValueExpressions</description>
			<name>onmousedown</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmousemove</name>
		</attribute>
		<attribute>
			<description>The HTML mouse out event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseout</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseover</name>
		</attribute>
		<attribute>
			<description>The HTML mouse wheel event handler. This attribute can hold ValueExpressions</description>
			<name>onmousewheel</name>
		</attribute>
		<attribute>
			<description>The HTML mouse enter event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseenter</name>
		</attribute>
		<attribute>
			<description>The HTML mouse leave event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseleave</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "title" attribute of the HTML tag</description>
			<name>title</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to an integer. Determines the number of list items to render at a time. Only works when the attribute 'limit' is true</description>
			<name>size</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true this component will limit the number of items displayed in the list</description>
			<name>limit</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the tab index of this component. A tab index is the value used 
				to determine the order in which input components will be navigated in an HTML form when the 'Tab' key is pressed. 
				A smaller value gives higher priority i.e. a tab index of 1 means it will be the first input to be navigated to, an index of 2
				means it will be the second input to be navigated to and so on
			</description>
			<name>tabindex</name>
		</attribute>
		<attribute>
			<description>Bootstrap button type to render</description>
			<name>displayType</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true the rendered HTML will fill the entire container</description>
			<name>fill</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true the selections will be auto-completable. 'listener' and 'suggestion' attributes must be set</description>
			<name>autocomplete</name>
		</attribute>
		<attribute>
			<description>A MethodExpression executed when the UIInput component's auto-complete value changes</description>
			<name>listener</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to list the component ids of components that should be re-rendered when the autocomplete listener is triggered</description>
			<name>render</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to list the component ids of components that should be executed when the autocomplete listener is triggered</description>
			<name>execute</name>
		</attribute>
		<attribute>
			<description>The ValueExpression for triggering javascript upon execution of the components AJAX event</description>
			<name>onevent</name>
		</attribute>
		<attribute>
			<description>The ValueExpression for triggering javascript upon failure to execute the components AJAX event</description>
			<name>onerror</name>
		</attribute>
		<attribute>
			<description>The ValueExpression that links to a backing bean to hold the auto-complete suggestion value</description>
			<name>suggestion</name>
		</attribute>
		<attribute>
			<description>The ValueExpression that evaluates to a double. Determines the time in seconds before the auto-complete suggestion is submitted.
				 Can be up to 3 significant digits after the decimal point. The value is multiplied by 1000 and cast to an integer
			</description>
			<name>delay</name>
		</attribute>
		<attribute>
			<description>The ValueExpression that evaluates to an integer. Determines the minimum number of characters required before 
				triggering auto completion
			</description>
			<name>minchars</name>
		</attribute>
		<attribute>
			<description>The ValueExpression that evaluates to a boolean. When true indicates that the drop down select menu should be rendered opened</description>
			<name>opened</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "style" attribute of the main HTML div of the rendered component</description>
			<name>mainStyle</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "class" attribute of the main HTML div of the rendered component</description>
			<name>mainClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "style" attribute of the HTML div of the select portion of the rendered component</description>
			<name>selectStyle</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "class" attribute of the HTML div of the select portion of the rendered component</description>
			<name>selectClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "style" attribute of the HTML button</description>
			<name>buttonStyle</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "class" attribute of the HTML button</description>
			<name>buttonClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "style" attribute of the HTML auto-complete input box</description>
			<name>autoStyle</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "class" attribute of the HTML auto-complete input box</description>
			<name>autoClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "style" attribute of the HTML div of the Bootstrap button group</description>
			<name>groupStyle</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "class" attribute of the HTML div of the Bootstrap button group</description>
			<name>groupClass</name>
		</attribute>
		<attribute>
			<description>The target for the overlay during AJAX calls. Used by the onevent handler of f:ajax to find the right target to overlay</description>
			<name>data-overlay-target</name>
		</attribute>
		<attribute>
			<description>A ValueExpression for disabling the UInput component</description>
			<name>disabled</name>
		</attribute>		
	</tag>
	<tag>
		<tag-name>selectOneInputGroup</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.selectinputgroup</component-type>
			<renderer-type>com.quakearts.bootstrap.selectinputgroup.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootSelectMenuHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that holds the UIOutput or UIInput component's value</description>
			<name>value</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Converter implementation for converting the UIInput or UIOutput component's value</description>
			<name>converter</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a conversion error</description>
			<name>converterMessage</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Validator implementation for validating the UIInput component's value</description>
			<name>validator</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a validator error</description>
			<name>validatorMessage</name>
		</attribute>
		<attribute>
			<description>A MethodExpression executed when the UIInput component's value changes</description>
			<name>valueChangeListener</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true the JSf lifecycle will end at the process validations stage and return an error to the view if value of the component is null</description>
			<name>required</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed when the component's value is required and fails validation</description>
			<name>requiredMessage</name>
		</attribute>
		<attribute>
			<description>A string indicating the java.util.Collecton implementation class of the component's value</description>
			<name>collectionType</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine the processing of javax.faces.component.SelectItem's marked as a hideNoSelection. A value of true prevents such components from being rendered</description>
			<name>hideNoSelectionOption</name>
		</attribute>
		<attribute>
			<description>HTML attribute for internationalization support. Indicates the writing direction of the components text</description>
			<name>dir</name>
		</attribute>
		<attribute>
			<description>HTML attribute used to declare the language of a Web page or a portion of a Web page</description>
			<name>lang</name>
		</attribute>
		<attribute>
			<description>A ValueExpression for rendering the component's label</description>
			<name>label</name>
		</attribute>
		<attribute>
			<description>The HTML blur event handler. This attribute can hold ValueExpressions</description>
			<name>onblur</name>
		</attribute>
		<attribute>
			<description>The HTML change event handler. This attribute can hold ValueExpressions</description>
			<name>onchange</name>
		</attribute>
		<attribute>
			<description>The HTML focus event handler. This attribute can hold ValueExpressions</description>
			<name>onfocus</name>
		</attribute>
		<attribute>
			<description>The HTML click event handler. This attribute can hold ValueExpressions</description>
			<name>onclick</name>
		</attribute>
		<attribute>
			<description>The HTML double click event handler. This attribute can hold ValueExpressions</description>
			<name>ondblclick</name>
		</attribute>
		<attribute>
			<description>The HTML key down event handler. This attribute can hold ValueExpressions</description>
			<name>onkeydown</name>
		</attribute>
		<attribute>
			<description>The HTML key press event handler. This attribute can hold ValueExpressions</description>
			<name>onkeypress</name>
		</attribute>
		<attribute>
			<description>The HTML key up event handler. This attribute can hold ValueExpressions</description>
			<name>onkeyup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse down event handler. This attribute can hold ValueExpressions</description>
			<name>onmousedown</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmousemove</name>
		</attribute>
		<attribute>
			<description>The HTML mouse out event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseout</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseover</name>
		</attribute>
		<attribute>
			<description>The HTML mouse wheel event handler. This attribute can hold ValueExpressions</description>
			<name>onmousewheel</name>
		</attribute>
		<attribute>
			<description>The HTML mouse enter event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseenter</name>
		</attribute>
		<attribute>
			<description>The HTML mouse leave event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseleave</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "style" attribute of the main HTML div of the rendered component</description>
			<name>mainStyle</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "class" attribute of the main HTML div of the rendered component</description>
			<name>mainClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "style" attribute of the HTML div of the Bootstrap input group</description>
			<name>groupStyle</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "style" attribute of the HTML div of the Bootstrap input group add-on</description>
			<name>addonStyle</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "style" attribute of the HTML div of the Bootstrap input group add-on input element</description>
			<name>controlStyle</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "title" attribute of the HTML tag</description>
			<name>title</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the tab index of this component. A tab index is the value used 
				to determine the order in which input components will be navigated in an HTML form when the 'Tab' key is pressed. 
				A smaller value gives higher priority i.e. a tab index of 1 means it will be the first input to be navigated to, an index of 2
				means it will be the second input to be navigated to and so on
			</description>
			<name>tabindex</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true the selections will be auto-completable</description>
			<name>autocomplete</name>
		</attribute>
		<attribute>
			<description>A MethodExpression executed when the UIInput component's auto-complete value changes</description>
			<name>listener</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to list the component ids of components that should be re-rendered.</description>
			<name>render</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to list the component ids of components that should be executed.</description>
			<name>execute</name>
		</attribute>
		<attribute>
			<description>The ValueExpression for triggering javascript upon execution of the components AJAX event</description>
			<name>onevent</name>
		</attribute>
		<attribute>
			<description>The ValueExpression for triggering javascript upon failure to execute the components AJAX event</description>
			<name>onerror</name>
		</attribute>
		<attribute>
			<description>The ValueExpression that links to a backing bean to hold the auto-complete suggestion value</description>
			<name>suggestion</name>
		</attribute>
		<attribute>
			<description>The ValueExpression that evaluates to a double. Determines the time in seconds before the auto-complete suggestion is submitted.
				 Can be up to 3 significant digits after the decimal point. The value is multiplied by 1000 and cast to an integer
			</description>
			<name>delay</name>
		</attribute>
		<attribute>
			<description>The ValueExpression that evaluates to an integer. Determines the minimum number of characters required before 
				triggering auto completion
			</description>
			<name>minchars</name>
		</attribute>
		<attribute>
			<description>The target for the overlay during AJAX calls. Used by the onevent handler of f:ajax to find the right target to overlay</description>
			<name>data-overlay-target</name>
		</attribute>
		<attribute>
			<description>A ValueExpression for disabling the UInput component</description>
			<name>disabled</name>
		</attribute>		
	</tag>
	<tag>
		<tag-name>selectOneInput</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.selectoneinput</component-type>
			<renderer-type>com.quakearts.bootstrap.selectoneinput.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootSelectMenuHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that holds the UIOutput or UIInput component's value</description>
			<name>value</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Converter implementation for converting the UIInput or UIOutput component's value</description>
			<name>converter</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a conversion error</description>
			<name>converterMessage</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Validator implementation for validating the UIInput component's value</description>
			<name>validator</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a validator error</description>
			<name>validatorMessage</name>
		</attribute>
		<attribute>
			<description>A MethodExpression executed when the UIInput component's value changes</description>
			<name>valueChangeListener</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true the JSf lifecycle will end at the process validations stage and return an error to the view if value of the component is null</description>
			<name>required</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed when the component's value is required and fails validation</description>
			<name>requiredMessage</name>
		</attribute>
		<attribute>
			<description>A string indicating the java.util.Collecton implementation class of the component's value</description>
			<name>collectionType</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine the processing of javax.faces.component.SelectItem's marked as a hideNoSelection. A value of true prevents such components from being rendered</description>
			<name>hideNoSelectionOption</name>
		</attribute>
		<attribute>
			<description>HTML attribute for internationalization support. Indicates the writing direction of the components text</description>
			<name>dir</name>
		</attribute>
		<attribute>
			<description>HTML attribute used to declare the language of a Web page or a portion of a Web page</description>
			<name>lang</name>
		</attribute>
		<attribute>
			<description>The HTML blur event handler. This attribute can hold ValueExpressions</description>
			<name>onblur</name>
		</attribute>
		<attribute>
			<description>The HTML change event handler. This attribute can hold ValueExpressions</description>
			<name>onchange</name>
		</attribute>
		<attribute>
			<description>The HTML focus event handler. This attribute can hold ValueExpressions</description>
			<name>onfocus</name>
		</attribute>
		<attribute>
			<description>The HTML click event handler. This attribute can hold ValueExpressions</description>
			<name>onclick</name>
		</attribute>
		<attribute>
			<description>The HTML double click event handler. This attribute can hold ValueExpressions</description>
			<name>ondblclick</name>
		</attribute>
		<attribute>
			<description>The HTML key down event handler. This attribute can hold ValueExpressions</description>
			<name>onkeydown</name>
		</attribute>
		<attribute>
			<description>The HTML key press event handler. This attribute can hold ValueExpressions</description>
			<name>onkeypress</name>
		</attribute>
		<attribute>
			<description>The HTML key up event handler. This attribute can hold ValueExpressions</description>
			<name>onkeyup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse down event handler. This attribute can hold ValueExpressions</description>
			<name>onmousedown</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmousemove</name>
		</attribute>
		<attribute>
			<description>The HTML mouse out event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseout</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseover</name>
		</attribute>
		<attribute>
			<description>The HTML mouse wheel event handler. This attribute can hold ValueExpressions</description>
			<name>onmousewheel</name>
		</attribute>
		<attribute>
			<description>The HTML mouse enter event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseenter</name>
		</attribute>
		<attribute>
			<description>The HTML mouse leave event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseleave</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "style" attribute of the main HTML div of the rendered component</description>
			<name>mainStyle</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "class" attribute of the main HTML div of the rendered component</description>
			<name>mainClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "class" attribute of the HTML div wrapping the select portion of the component</description>
			<name>wrapClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "style" attribute of the HTML div wrapping the select portion of the component</description>
			<name>wrapStyle</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "class" attribute of the HTML div wrapping the drop down portion of the component</description>
			<name>dropClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "style" attribute of the HTML div wrapping the drop down portion of the component</description>
			<name>dropStyle</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "title" attribute of the HTML tag</description>
			<name>title</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true this component will be set to read only and will ignore submitted values</description>
			<name>readonly</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the tab index of this component. A tab index is the value used 
				to determine the order in which input components will be navigated in an HTML form when the 'Tab' key is pressed. 
				A smaller value gives higher priority i.e. a tab index of 1 means it will be the first input to be navigated to, an index of 2
				means it will be the second input to be navigated to and so on
			</description>
			<name>tabindex</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true the selections will be auto-completable</description>
			<name>autocomplete</name>
		</attribute>
		<attribute>
			<description>A MethodExpression executed when the UIInput component's auto-complete value changes</description>
			<name>listener</name>
		</attribute>
		<attribute>
			<description>Bootstrap button type to render</description>
			<name>displayType</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to list the component ids of components that should be re-rendered.</description>
			<name>render</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to list the component ids of components that should be executed.</description>
			<name>execute</name>
		</attribute>
		<attribute>
			<description>The ValueExpression for triggering javascript upon execution of the components AJAX event</description>
			<name>onevent</name>
		</attribute>
		<attribute>
			<description>The ValueExpression for triggering javascript upon failure to execute the components AJAX event</description>
			<name>onerror</name>
		</attribute>
		<attribute>
			<description>The ValueExpression that links to a backing bean to hold the auto-complete suggestion value</description>
			<name>suggestion</name>
		</attribute>
		<attribute>
			<description>The ValueExpression that evaluates to a double. Determines the time in seconds before the auto-complete suggestion is submitted.
				 Can be up to 3 significant digits after the decimal point. The value is multiplied by 1000 and cast to an integer
			</description>
			<name>delay</name>
		</attribute>
		<attribute>
			<description>The ValueExpression that evaluates to an integer. Determines the minimum number of characters required before 
				triggering auto completion
			</description>
			<name>minchars</name>
		</attribute>
		<attribute>
			<description>The target for the overlay during AJAX calls. Used by the onevent handler of f:ajax to find the right target to overlay</description>
			<name>data-overlay-target</name>
		</attribute>
		<attribute>
			<description>A ValueExpression for disabling the UInput component</description>
			<name>disabled</name>
		</attribute>		
	</tag>
	<tag>
		<tag-name>dataTable</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.datatable</component-type>
			<renderer-type>com.quakearts.bootstrap.datatable.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>A ValueExpression that evaluates to an Integer. Determines the first element of the list to render. </description>
			<name>first</name>
		</attribute>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to an integer. Determines the number of list items to render. </description>
			<name>rows</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that holds the UIOutput or UIInput component's value</description>
			<name>value</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to the variable name used in the nested components to refer to the current row </description>
			<name>var</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "bgcolor" attribute of the HTML table</description>
			<name>bgcolor</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to list of integers. Determines the rows to wrap in a 'tbody' element. </description>
			<name>bodyrows</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "border" attribute of the HTML table</description>
			<name>border</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "class" attribute of the HTML caption facet</description>
			<name>captionClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "style" attribute of the HTML caption facet</description>
			<name>captionStyle</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "cellpadding" attribute of the HTML table</description>
			<name>cellpadding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "cellspacing" attribute of the HTML table</description>
			<name>cellspacing</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a list of css classes to be applied, in order, on each column of the table</description>
			<name>columnClasses</name>
		</attribute>
		<attribute>
			<description>HTML attribute for internationalization support. Indicates the writing direction of the components text</description>
			<name>dir</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a css class to be applied to the footer of the table</description>
			<name>footerClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "frame" attribute of the HTML table</description>
			<name>frame</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a css class to be applied to the header of the table</description>
			<name>headerClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a list of css classes to be applied, in order, on each header column of the table</description>
			<name>headerClasses</name>
		</attribute>
		<attribute>
			<description>HTML attribute used to declare the language of a Web page or a portion of a Web page</description>
			<name>lang</name>
		</attribute>
		<attribute>
			<description>The HTML click event handler. This attribute can hold ValueExpressions</description>
			<name>onclick</name>
		</attribute>
		<attribute>
			<description>The HTML double click event handler. This attribute can hold ValueExpressions</description>
			<name>ondblclick</name>
		</attribute>
		<attribute>
			<description>The HTML key down event handler. This attribute can hold ValueExpressions</description>
			<name>onkeydown</name>
		</attribute>
		<attribute>
			<description>The HTML key press event handler. This attribute can hold ValueExpressions</description>
			<name>onkeypress</name>
		</attribute>
		<attribute>
			<description>The HTML key up event handler. This attribute can hold ValueExpressions</description>
			<name>onkeyup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse down event handler. This attribute can hold ValueExpressions</description>
			<name>onmousedown</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmousemove</name>
		</attribute>
		<attribute>
			<description>The HTML mouse out event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseout</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseover</name>
		</attribute>
		<attribute>
			<description>The HTML mouse up event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse wheel event handler. This attribute can hold ValueExpressions</description>
			<name>onmousewheel</name>
		</attribute>
		<attribute>
			<description>The HTML mouse enter event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseenter</name>
		</attribute>
		<attribute>
			<description>The HTML mouse leave event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseleave</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a list of css classes to be applied, in order, on each row of the table</description>
			<name>rowClasses</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "rules" attribute of the HTML table</description>
			<name>rules</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" attribute of the HTML table</description>
			<name>style</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" attribute of the HTML table</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "summary" attribute of the HTML table</description>
			<name>summary</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "title" attribute of the HTML table</description>
			<name>title</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "width" attribute of the HTML table</description>
			<name>width</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>The ValueExpression of the variable to store the current index</description>
			<name>idVar</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>resource</tag-name>
		<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootResourceTagHandler</handler-class>
		<attribute>
			<description>A ValueExpression that evaluates to the name of the resource</description>
			<name>name</name>
			<required>true</required>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to the library of the resource</description>
			<name>library</name>
			<required>true</required>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to the position to render to resource in the html header. one of 'top' or 'bottom' defaults to bottom</description>
			<name>position</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to the type of resource. Must be one of 'script' or 'css'</description>
			<name>type</name>
			<required>true</required>
		</attribute>
	</tag>
	<tag>
		<tag-name>boot</tag-name>
		<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootTagHandler</handler-class>
	</tag>
	<tag>
		<tag-name>paginationListener</tag-name>
		<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootPaginationListenerHandler</handler-class>
		<attribute>
			<description>A MethodExpression of a managed bean method to execute when an PaginationEvent is triggered. The method must have the signature 'void methodName(PaginationEvent)' </description>
			<name>value</name>
			<required>true</required>
		</attribute>
	</tag>
	<tag>
		<tag-name>responsiveImage</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.bootresponsiveimage</component-type>
			<renderer-type>com.quakearts.bootstrap.bootresponsiveimage.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>A ValueExpression to render as the "align" attribute of the HTML image</description>
			<name>align</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "alt" attribute of the HTML image</description>
			<name>alt</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "border" attribute of the HTML image</description>
			<name>border</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "crossorigin" attribute of the HTML image</description>
			<name>crossorigin</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "height" attribute of the HTML image</description>
			<name>height</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "hspace" attribute of the HTML image</description>
			<name>hspace</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "ismap" attribute of the HTML image</description>
			<name>ismap</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "longdesc" attribute of the HTML image</description>
			<name>longdesc</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "usemap" attribute of the HTML image</description>
			<name>usemap</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "vspace" attribute of the HTML image</description>
			<name>vspace</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "width" attribute of the HTML image</description>
			<name>width</name>
		</attribute>
		<attribute>
			<description>The HTML click event handler. This attribute can hold ValueExpressions</description>
			<name>onclick</name>
		</attribute>
		<attribute>
			<description>The HTML double click event handler. This attribute can hold ValueExpressions</description>
			<name>ondblclick</name>
		</attribute>
		<attribute>
			<description>The HTML mouse down event handler. This attribute can hold ValueExpressions</description>
			<name>onmousedown</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmousemove</name>
		</attribute>
		<attribute>
			<description>The HTML mouse out event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseout</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseover</name>
		</attribute>
		<attribute>
			<description>The HTML mouse up event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse wheel event handler. This attribute can hold ValueExpressions</description>
			<name>onmousewheel</name>
		</attribute>
		<attribute>
			<description>The HTML mouse enter event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseenter</name>
		</attribute>
		<attribute>
			<description>The HTML mouse leave event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseleave</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" attribute of the HTML tag</description>
			<name>style</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" attribute of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "title" attribute of the HTML tag</description>
			<name>title</name>
		</attribute>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>imageEntry</tag-name>
		<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootImageEntryHandler</handler-class>
		<attribute>
			<description>The ValueExpression that evaluates to an integer. Determines the minimum screen size the image should be rendered to</description>
			<name>size</name>
			<required>true</required>
		</attribute>
		<attribute>
			<description>The ValueExpression that evaluates to the image path relative to the root of site holding the image</description>
			<name>imagePath</name>
			<required>true</required>
		</attribute>
	</tag>
	<tag>
		<tag-name>sideMenu</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.sidemenu</component-type>
			<renderer-type>com.quakearts.bootstrap.sidemenu.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>A ValueExpression to render as the "style" attribute of the HTML tag</description>
			<name>style</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" attribute of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "title" attribute of the HTML tag</description>
			<name>title</name>
		</attribute>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>The HTML click event handler. This attribute can hold ValueExpressions</description>
			<name>onclick</name>
		</attribute>
		<attribute>
			<description>The HTML double click event handler. This attribute can hold ValueExpressions</description>
			<name>ondblclick</name>
		</attribute>
		<attribute>
			<description>The HTML mouse down event handler. This attribute can hold ValueExpressions</description>
			<name>onmousedown</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmousemove</name>
		</attribute>
		<attribute>
			<description>The HTML mouse out event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseout</name>
		</attribute>
		<attribute>
			<description>The ValueExpression that evaluates to an integer. Determines the minimum screen size the image should be rendered to</description>
			<name>onmouseover</name>
		</attribute>
		<attribute>
			<description>The HTML mouse up event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse wheel event handler. This attribute can hold ValueExpressions</description>
			<name>onmousewheel</name>
		</attribute>
	</tag>	
</facelet-taglib>