<?xml version="1.0" encoding="UTF-8"?>
<facelet-taglib version="2.0" xmlns="http://java.sun.com/xml/ns/javaee"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-facelettaglibrary_2_0.xsd">
	<namespace>http://quakearts.com/2.0/boot</namespace>
	<tag>
		<description><![CDATA[
A tag for rendering an AJAX loader components.

Decode Behavior: None

Encode Behavior: render a &gt;div&lt; element collapsed containing image to render on full page.
Creates javascript methods for calling on jsf.ajax events;

There must be only one of these components per page. Multiple components will result in unpredicatable behavior 
		]]></description>
		<tag-name>ajaxLoader</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.ajaxloader</component-type>
			<renderer-type>com.quakearts.bootstrap.ajaxloader.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootAjaxLoaderHandler</handler-class>
		</component>
		<attribute>
			<description>Image for full page loader</description>
			<name>mainloaderimage</name>
			<required>true</required>
		</attribute>
		<attribute>
			<description>Image for overlay on a components. The parent component to be overlaid should have the class 'ajax-container'.</description>
			<name>overlayloaderimage</name>
			<required>true</required>
		</attribute>
		<attribute>
			<description>Image for rendering a mini image at the right of a component.</description>
			<name>miniloaderimage</name>
			<required>true</required>
		</attribute>
		<attribute>
			<description>HTML style to render on the &gt;img&lt; tag of the mainloaderimage.</description>
			<name>mainimagestyle</name>
		</attribute>
		<attribute>
			<description>HTML style to render on the &gt;img&lt; tag of the overlayloaderimage.</description>
			<name>miniimagestyle</name>
		</attribute>
		<attribute>
			<description>HTML style to render on the &gt;img&lt; tag of the miniloaderimage.</description>
			<name>overlayimagestyle</name>
		</attribute>
		<attribute>
			<description>Start timeout for loader image animation</description>
			<name>startTimeout</name>
		</attribute>
		<attribute>
			<description>End timeout for loader image animation</description>
			<name>endTimeout</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>ValueExpression or attribute for controlling component rendering</description>
			<name>rendered</name>
			<type>java.lang.Boolean</type>
		</attribute>
	</tag>
	<tag>
		<description><![CDATA[
A tag for rendering a Bootstrap Breadcrumb component. This tag nests breadCrumbItems, stacked in a tree structure to indicate navigation routes
for the application.
<br />
Decode behviour: none
<br />
Encode behavior: This compoenent handles the rendering of its child components. The component iterates over the child components, testing each
child component to determine which ones to render. The test can be one of two things: if the child component has a value, that value is 
compared to this components value. If it is true, it and all parent components (up to this component) are added to a stack to be evaluated.
The second test evaluates a ValueExpression to determine if it should be rendred. If true the same process applies.
		]]></description>
		<tag-name>breadCrumb</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.breadcrumbs</component-type>
			<renderer-type>com.quakearts.bootstrap.breadcrumbs.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" element of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>The HTML click event handler. This attribute can hold ValueExpressions</description>
			<name>onclick</name>
		</attribute>
		<attribute>
			<description>The HTML double click event handler. This attribute can hold ValueExpressions</description>
			<name>ondblclick</name>
		</attribute>
		<attribute>
			<description>The HTML mouse down event handler. This attribute can hold ValueExpressions</description>
			<name>onmousedown</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmousemove</name>
		</attribute>
		<attribute>
			<description>The HTML mouse out event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseout</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseover</name>
		</attribute>
		<attribute>
			<description>The HTML mouse up event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse wheel event handler. This attribute can hold ValueExpressions</description>
			<name>onmousewheel</name>
		</attribute>
		<attribute>
			<description>The HTML mouse enter event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseenter</name>
		</attribute>
		<attribute>
			<description>The HTML mouse enter event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseleave</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" element of the HTML tag</description>
			<name>style</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "title" element of the HTML tag</description>
			<name>title</name>
		</attribute>
	</tag>
	<tag>
		<description><![CDATA[
A tag for rendering a Bootstrap Breadcrumb component. This component can be nested within a breadCrumb tag (the root of the tree)
or within another breadCrumbItem. The value attribute of this component is compared to the parent component's value to determine
activation. Alternatively the activate attribute is evaluated to determine activation. This enables two patterns for bread crumb
creation: as a tree, representing the navigational paths the app can take, or as a stack that can be activated arbitraily.

Decode behavior: None

Encode behavior: Renders any UIOutput child component.
		]]></description>
		<tag-name>breadCrumbItem</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.breadcrumbitem</component-type>
			<renderer-type>com.quakearts.bootstrap.breadcrumbitem.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" element of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true the breadcrumbitem will be rendered as active</description>
			<name>activate</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression for rendering the component's label</description>
			<name>label</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that holds the UIOutput or UIInput component's value</description>
			<name>value</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Converter implementation for converting the UIInput or UIOutput component's value</description>
			<name>converter</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a conversion error</description>
			<name>converterMessage</name>
		</attribute>
		<attribute>
			<description>The HTML click event handler. This attribute can hold ValueExpressions</description>
			<name>onclick</name>
		</attribute>
		<attribute>
			<description>The HTML double click event handler. This attribute can hold ValueExpressions</description>
			<name>ondblclick</name>
		</attribute>
		<attribute>
			<description>The HTML mouse down event handler. This attribute can hold ValueExpressions</description>
			<name>onmousedown</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmousemove</name>
		</attribute>
		<attribute>
			<description>The HTML mouse out event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseout</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseover</name>
		</attribute>
		<attribute>
			<description>The HTML mouse up event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse wheel event handler. This attribute can hold ValueExpressions</description>
			<name>onmousewheel</name>
		</attribute>
		<attribute>
			<description>The HTML mouse enter event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseenter</name>
		</attribute>
		<attribute>
			<description>The HTML mouse leave event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseleave</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" element of the HTML tag</description>
			<name>style</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "title" element of the HTML tag</description>
			<name>title</name>
		</attribute>
	</tag>
	<tag>
		<description><![CDATA[
Bootstrap Button Group tag renderer. This tag must only have button components as children. Any other component will lead to
unpredictable behavior

Decode behavior: None

Encode behavior: Renders a &lt;div&gt; element with the button group classes. Renders child components within the div
		]]></description>
		<tag-name>buttonGroup</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.btngroup</component-type>
			<renderer-type>com.quakearts.bootstrap.btngroup.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression for rendering the component's label</description>
			<name>label</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" element of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" element of the HTML tag</description>
			<name>style</name>
		</attribute>
	</tag>
	<tag>
		<description><![CDATA[
Bootstrap Button Toolbar tag renderer. This tag must only have button components as children. Any other component will lead to
unpredictable behavior

Decode behavior: None

Encode behavior: Renders a &lt;div&gt; element with the button group classes. Renders child components within the div
		]]></description>
		<tag-name>buttonToolbar</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.btntoolbar</component-type>
			<renderer-type>com.quakearts.bootstrap.btntoolbar.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression for rendering the component's label</description>
			<name>label</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" element of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" element of the HTML tag</description>
			<name>style</name>
		</attribute>
	</tag>
	<tag>
		<description><![CDATA[
Bootstrap Input Group with a checkbox in the label portion. This component can nest inputText tags and provide a check box to activate or
deactivate the component. It can also render a label for the checkbox in the "form-control" classed element.

Decode behavior: None

Encode behavior: Renders a Bootstrap input group element with a checkbox at the label (input-group-addon) portion. Renders an inputText 
child component if present
		]]></description>
		<tag-name>checkbox</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.checkbox</component-type>
			<renderer-type>com.quakearts.bootstrap.checkbox.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that holds the UIOutput or UIInput component's value</description>
			<name>value</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Converter implementation for converting the UIInput or UIOutput component's value</description>
			<name>converter</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a conversion error</description>
			<name>converterMessage</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Validator implementation for validating the UIInput component's value</description>
			<name>validator</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a validator error</description>
			<name>validatorMessage</name>
		</attribute>
		<attribute>
			<description>A MethodExpression executed when the UIInput component's value changes</description>
			<name>valueChangeListener</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true the JSf lifecycle will end at the process validations stage and return an error to the view if value of the component is null</description>
			<name>required</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed when the component's value is required and fails validation</description>
			<name>requiredMessage</name>
		</attribute>
		<attribute>
			<description>A ValueExpression for rendering the component's label</description>
			<name>label</name>
		</attribute>
		<attribute>
			<description>The HTML blur event handler. This attribute can hold ValueExpressions</description>
			<name>onblur</name>
		</attribute>
		<attribute>
			<description>The HTML change event handler. This attribute can hold ValueExpressions</description>
			<name>onchange</name>
		</attribute>
		<attribute>
			<description>The HTML focus event handler. This attribute can hold ValueExpressions</description>
			<name>onfocus</name>
		</attribute>
		<attribute>
			<description>The HTML click event handler. This attribute can hold ValueExpressions</description>
			<name>onclick</name>
		</attribute>
		<attribute>
			<description>The HTML double click event handler. This attribute can hold ValueExpressions</description>
			<name>ondblclick</name>
		</attribute>
		<attribute>
			<description>The HTML key down event handler. This attribute can hold ValueExpressions</description>
			<name>onkeydown</name>
		</attribute>
		<attribute>
			<description>The HTML key press event handler. This attribute can hold ValueExpressions</description>
			<name>onkeypress</name>
		</attribute>
		<attribute>
			<description>The HTML key up event handler. This attribute can hold ValueExpressions</description>
			<name>onkeyup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse down event handler. This attribute can hold ValueExpressions</description>
			<name>onmousedown</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmousemove</name>
		</attribute>
		<attribute>
			<description>The HTML mouse out event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseout</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseover</name>
		</attribute>
		<attribute>
			<description>The HTML mouse wheel event handler. This attribute can hold ValueExpressions</description>
			<name>onmousewheel</name>
		</attribute>
		<attribute>
			<description>The HTML mouse enter event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseenter</name>
		</attribute>
		<attribute>
			<description>The HTML mouse leave event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseleave</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" element of the HTML tag</description>
			<name>style</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" element of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "style" element of the div HTML tag that wraps the element</description>
			<name>mainStyle</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "class" element of the div HTML tag that wraps the element</description>
			<name>mainClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "title" element of the HTML tag</description>
			<name>title</name>
		</attribute>
		<attribute>
			<name>tabindex</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean to determine the UIInput processing status. A value of true prevents the processing of the components decode phase</description>
			<name>required</name>
		</attribute>
		<attribute>
			<description>The target for the overlay during AJAX calls. Used by the onevent handler of f:ajax to find the right target to overlay</description>
			<name>data-overlay-target</name>
		</attribute>
		<attribute>
			<description>A ValueExpression for disabling the UInput component</description>
			<name>disabled</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>column</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.bootcolumn</component-type>
			<renderer-type>com.quakearts.bootstrap.bootcolumn.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootColumnHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>Number of Bootstrap columns spans (1-12) this element will have for extra small screens (less than 768px)</description>
			<name>xs</name>
		</attribute>
		<attribute>
			<description>Number of Bootstrap columns spans (1-12) this element will haverender for small screens (between 768px and 992px)</description>
			<name>sm</name>
		</attribute>
		<attribute>
			<description>Number of Bootstrap columns spans (1-12) this element will haverender for mid sized screens (between 992px and 1170px)</description>
			<name>md</name>
		</attribute>
		<attribute>
			<description>Number of Bootstrap columns spans (1-12) this element will haverender for large screens (greater than 1170px)</description>
			<name>lg</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" element of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" element of the HTML tag</description>
			<name>style</name>
		</attribute>
		<attribute>
			<description>Number of Bootstrap columns spans (1-12) to offset this element for extra small screens (less than 768px)</description>
			<name>offsetxs</name>
		</attribute>
		<attribute>
			<description>Number of Bootstrap columns spans (1-12) to offset this element for small screens (between 768px and 992px)</description>
			<name>offsetsm</name>
		</attribute>
		<attribute>
			<description>Number of Bootstrap columns spans (1-12) to offset this element for mid sized screens (between 992px and 1170px)</description>
			<name>offsetmd</name>
		</attribute>
		<attribute>
			<description>Number of Bootstrap columns spans (1-12) to offset this element for large screens (greater than 1170px)</description>
			<name>offsetlg</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>button</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.btn</component-type>
			<renderer-type>com.quakearts.bootstrap.btn.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that holds the UIOutput or UIInput component's value</description>
			<name>value</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Converter implementation for converting the UIInput or UIOutput component's value</description>
			<name>converter</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a conversion error</description>
			<name>converterMessage</name>
		</attribute>
		<attribute>
			<description>Bootstrap button type to render</description>
			<name>displayType</name>
		</attribute>
		<attribute>
			<description>Image to render on the button</description>
			<name>image</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" element of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>Button type (submit, button)</description>
			<name>type</name>
		</attribute>
		<attribute>
			<description>A MethodExpression of a managed bean method to execute when an ActionEvent is triggered. The method must have the signature 'void methodName(ActionListener)' </description>
			<name>actionListener</name>
		</attribute>
		<attribute>
			<description>A MethodExpression of a managed bean method to execute when this button is pressed. The method must have the signature 'void methodName()' </description>
			<name>action</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to the a string to be rendered as the HTML 'accesskey' attribute of the component</description>
			<name>accesskey</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to the a string to be rendered as the HTML 'alt' attribute of the component</description>
			<name>alt</name>
		</attribute>
		<attribute>
			<description>HTML attribute for internationalization support. Indicates the writing direction of the components text</description>
			<name>dir</name>
		</attribute>
		<attribute>
			<description>HTML attribute used to declare the language of a Web page or a portion of a Web page</description>
			<name>lang</name>
		</attribute>
		<attribute>
			<description>The HTML blur event handler. This attribute can hold ValueExpressions</description>
			<name>onblur</name>
		</attribute>
		<attribute>
			<description>The HTML change event handler. This attribute can hold ValueExpressions</description>
			<name>onchange</name>
		</attribute>
		<attribute>
			<description>The HTML double click event handler. This attribute can hold ValueExpressions</description>
			<name>ondblclick</name>
		</attribute>
		<attribute>
			<description>The HTML focus event handler. This attribute can hold ValueExpressions</description>
			<name>onfocus</name>
		</attribute>
		<attribute>
			<description>The HTML key down event handler. This attribute can hold ValueExpressions</description>
			<name>onkeydown</name>
		</attribute>
		<attribute>
			<description>The HTML key press event handler. This attribute can hold ValueExpressions</description>
			<name>onkeypress</name>
		</attribute>
		<attribute>
			<description>The HTML key up event handler. This attribute can hold ValueExpressions</description>
			<name>onkeyup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse down event handler. This attribute can hold ValueExpressions</description>
			<name>onmousedown</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmousemove</name>
		</attribute>
		<attribute>
			<description>The HTML mouse out event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseout</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseover</name>
		</attribute>
		<attribute>
			<description>The HTML mouse up event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse wheel event handler. This attribute can hold ValueExpressions</description>
			<name>onmousewheel</name>
		</attribute>
		<attribute>
			<description>The HTML mouse enter event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseenter</name>
		</attribute>
		<attribute>
			<description>The HTML mouse leave event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseleave</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" element of the HTML tag</description>
			<name>style</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "tabindex" element of the HTML tag</description>
			<name>tabindex</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "title" element of the HTML tag</description>
			<name>title</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean to determine the UIInput processing status. A value of true prevents the processing of the components decode phase</description>
			<name>required</name>
		</attribute>
		<attribute>
			<description>The target for the overlay during AJAX calls. Used by the onevent handler of f:ajax to find the right target to overlay</description>
			<name>data-overlay-target</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>container</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.bootcontainer</component-type>
			<renderer-type>com.quakearts.bootstrap.bootcontainer.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a Boolean. Controls the rendering of Bootstrap 'navbar-fluid' css class in hte 'class' attribute</description>
			<name>fluid</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" element of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" element of the HTML tag</description>
			<name>style</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>date</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.date</component-type>
			<renderer-type>com.quakearts.bootstrap.date.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that holds the UIOutput or UIInput component's value</description>
			<name>value</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Converter implementation for converting the UIInput or UIOutput component's value</description>
			<name>converter</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a conversion error</description>
			<name>converterMessage</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Validator implementation for validating the UIInput component's value</description>
			<name>validator</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a validator error</description>
			<name>validatorMessage</name>
		</attribute>
		<attribute>
			<description>A MethodExpression executed when the UIInput component's value changes</description>
			<name>valueChangeListener</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true the JSf lifecycle will end at the process validations stage and return an error to the view if value of the component is null</description>
			<name>required</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed when the component's value is required and fails validation</description>
			<name>requiredMessage</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a number (maximum of 9) 
				indicating the number of years before the current year to display in the year 
				component of the date element. Values greater then 9 will trigger the infinite date styling.
				Infinite date styling renders a text box in the year component that accepts variable years.
				If the max attribute is also specified, it becomes the range of year values to show. In that instance,
				the maximum is 9 minus the value of the max attribute. If min attribute plus max attribute is greater than 9,
				infinite date styling is triggered.
			</description>
			<name>min</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a number (maximum of 9) 
				indicating the number of years after the current year to display in the year 
				component of the date element. Values greater then 9 will trigger the infinite date styling.
				Infinite date styling renders a text box in the year component that accepts variable years.
				If the min attribute is also specified, it becomes the range of year values to show. In that instance,
				the maximum is 9 minus the value of the min attribute. If min attribute plus max attribute is greater than 9,
				infinite date styling is triggered.
			</description>
			<name>max</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a string which controls the format of the date the input component will generate.
				Valid values are d (day only), dm (day/month), my (month/year), y (year) and dmy (date/month/year)
			</description>
			<name>format</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a Boolean indicating whether the date can be null
			</description>
			<name>nullable</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" element of the day button HTML tag</description>
			<name>dayClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" element of the month button HTML tag</description>
			<name>monthClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" element of the year button HTML tag</description>
			<name>yearClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" element of the day button HTML tag</description>
			<name>dayType</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" element of the month button HTML tag</description>
			<name>monthType</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" element of the year button HTML tag</description>
			<name>yearType</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" element of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" element of the HTML tag</description>
			<name>style</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean to determine the UIInput processing status. A value of true prevents the processing of the components decode phase</description>
			<name>required</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to an integer which will be added or subtracted from the hour whenever the increment/decrement controls are clicked </description>
			<name>hourStep</name>
		</attribute>		
		<attribute>
			<description>A ValueExpression that evaluates to an integer which will be added or subtracted from the minute whenever the increment/decrement controls are clicked </description>
			<name>minuteStep</name>
		</attribute>		
		<attribute>
			<description>A ValueExpression that evaluates to an integer which will be added or subtracted from the second whenever the increment/decrement controls are clicked </description>
			<name>secondStep</name>
		</attribute>		
		<attribute>
			<description>A ValueExpression that evaluates to a boolean to determine if the time will be in 24 hour or 12 hour format </description>
			<name>timeIs24hour</name>
		</attribute>		
		<attribute>
			<description>The target for the overlay during AJAX calls. Used by the onevent handler of f:ajax to find the right target to overlay</description>
			<name>data-overlay-target</name>
		</attribute>
		<attribute>
			<description>The HTML mouse down event handler. This attribute can hold ValueExpressions</description>
			<name>onmousedown</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmousemove</name>
		</attribute>
		<attribute>
			<description>The HTML mouse out event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseout</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseover</name>
		</attribute>
		<attribute>
			<description>The HTML mouse up event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse wheel event handler. This attribute can hold ValueExpressions</description>
			<name>onmousewheel</name>
		</attribute>
		<attribute>
			<description>The HTML mouse enter event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseenter</name>
		</attribute>
		<attribute>
			<description>The HTML mouse leave event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseleave</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>menu</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.menu</component-type>
			<renderer-type>com.quakearts.bootstrap.menu.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that holds the UIOutput or UIInput component's value</description>
			<name>value</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Converter implementation for converting the UIInput or UIOutput component's value</description>
			<name>converter</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a conversion error</description>
			<name>converterMessage</name>
		</attribute>
		<attribute>
			<description>Bootstrap button type to render</description>
			<name>displayType</name>
		</attribute>
		<attribute>
			<name>type</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" element of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" element of the HTML tag</description>
			<name>style</name>
		</attribute>
		<attribute>
			<name>no-group</name>
		</attribute>
		<attribute>
			<name>dropup</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>fileinput</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.fileinput</component-type>
			<renderer-type>com.quakearts.bootstrap.fileinput.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootFileInputHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<name>render</name>
		</attribute>
		<attribute>
			<name>execute</name>
		</attribute>
		<attribute>
			<description>A ValueExpression for rendering the component's label</description>
			<name>label</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<name>onevent</name>
		</attribute>
		<attribute>
			<name>onerror</name>
		</attribute>
		<attribute>
			<name>accept</name>
			<required>true</required>
		</attribute>
		<attribute>
			<name>data</name>
		</attribute>
		<attribute>
			<name>name</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that holds the UIOutput or UIInput component's value</description>
			<name>value</name>
		</attribute>
		<attribute>
			<name>allowMultiple</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" element of the HTML tag</description>
			<name>style</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" element of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean to determine the UIInput processing status. A value of true prevents the processing of the components decode phase</description>
			<name>required</name>
		</attribute>
		<attribute>
			<description>The target for the overlay during AJAX calls. Used by the onevent handler of f:ajax to find the right target to overlay</description>
			<name>data-overlay-target</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>form</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.form</component-type>
			<renderer-type>com.quakearts.bootstrap.form.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<name>prependId</name>
		</attribute>
		<attribute>
			<name>target</name>
		</attribute>
		<attribute>
			<name>accept</name>
		</attribute>
		<attribute>
			<name>acceptcharset</name>
		</attribute>
		<attribute>
			<name>enctype</name>
		</attribute>
		<attribute>
			<description>HTML attribute for internationalization support. Indicates the writing direction of the components text</description>
			<name>dir</name>
		</attribute>
		<attribute>
			<description>HTML attribute used to declare the language of a Web page or a portion of a Web page</description>
			<name>lang</name>
		</attribute>
		<attribute>
			<description>The HTML click event handler. This attribute can hold ValueExpressions</description>
			<name>onclick</name>
		</attribute>
		<attribute>
			<description>The HTML double click event handler. This attribute can hold ValueExpressions</description>
			<name>ondblclick</name>
		</attribute>
		<attribute>
			<description>The HTML key down event handler. This attribute can hold ValueExpressions</description>
			<name>onkeydown</name>
		</attribute>
		<attribute>
			<description>The HTML key press event handler. This attribute can hold ValueExpressions</description>
			<name>onkeypress</name>
		</attribute>
		<attribute>
			<description>The HTML key up event handler. This attribute can hold ValueExpressions</description>
			<name>onkeyup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse down event handler. This attribute can hold ValueExpressions</description>
			<name>onmousedown</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmousemove</name>
		</attribute>
		<attribute>
			<description>The HTML mouse out event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseout</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseover</name>
		</attribute>
		<attribute>
			<description>The HTML mouse wheel event handler. This attribute can hold ValueExpressions</description>
			<name>onmousewheel</name>
		</attribute>
		<attribute>
			<description>The HTML mouse enter event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseenter</name>
		</attribute>
		<attribute>
			<description>The HTML mouse leave event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseleave</name>
		</attribute>
		<attribute>
			<name>onreset</name>
		</attribute>
		<attribute>
			<name>onsubmit</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" element of the HTML tag</description>
			<name>style</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" element of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "title" element of the HTML tag</description>
			<name>title</name>
		</attribute>
		<attribute>
			<name>type</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>formGroup</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.formgroup</component-type>
			<renderer-type>com.quakearts.bootstrap.formgroup.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" element of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" element of the HTML tag</description>
			<name>style</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>glyph</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.glyph</component-type>
			<renderer-type>com.quakearts.bootstrap.glyph.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to the name of the glyphicon to be rendered</description>
			<name>value</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" element of the HTML tag</description>
			<name>style</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" element of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "title" element of the HTML tag</description>
			<name>title</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Converter implementation for converting the UIInput or UIOutput component's value</description>
			<name>converter</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a conversion error</description>
			<name>converterMessage</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>flaticon</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.flaticon</component-type>
			<renderer-type>com.quakearts.bootstrap.flaticon.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to the name of the flaticon to be rendered</description>
			<name>value</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" element of the HTML tag</description>
			<name>style</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" element of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "title" element of the HTML tag</description>
			<name>title</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Converter implementation for converting the UIInput or UIOutput component's value</description>
			<name>converter</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a conversion error</description>
			<name>converterMessage</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>fa</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.fontawesome</component-type>
			<renderer-type>com.quakearts.bootstrap.fontawesome.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to the name of the glyphicon to be rendered</description>
			<name>value</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" element of the HTML tag</description>
			<name>style</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" element of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "title" element of the HTML tag</description>
			<name>title</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Converter implementation for converting the UIInput or UIOutput component's value</description>
			<name>converter</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a conversion error</description>
			<name>converterMessage</name>
		</attribute>
	</tag>	
	<tag>
		<tag-name>inputText</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.textinput</component-type>
			<renderer-type>com.quakearts.bootstrap.textinput.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that holds the UIOutput or UIInput component's value</description>
			<name>value</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Converter implementation for converting the UIInput or UIOutput component's value</description>
			<name>converter</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a conversion error</description>
			<name>converterMessage</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Validator implementation for validating the UIInput component's value</description>
			<name>validator</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a validator error</description>
			<name>validatorMessage</name>
		</attribute>
		<attribute>
			<description>A MethodExpression executed when the UIInput component's value changes</description>
			<name>valueChangeListener</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true the JSf lifecycle will end at the process validations stage and return an error to the view if value of the component is null</description>
			<name>required</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed when the component's value is required and fails validation</description>
			<name>requiredMessage</name>
		</attribute>
		<attribute>
			<name>immediate</name>
		</attribute>
		<attribute>
			<name>accesskey</name>
		</attribute>
		<attribute>
			<name>alt</name>
		</attribute>
		<attribute>
			<name>autocomplete</name>
		</attribute>
		<attribute>
			<description>HTML attribute for internationalization support. Indicates the writing direction of the components text</description>
			<name>dir</name>
		</attribute>
		<attribute>
			<description>HTML attribute used to declare the language of a Web page or a portion of a Web page</description>
			<name>lang</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean to determine the UIInput processing status. A value of true prevents the processing of the components decode phase</description>
			<name>required</name>
		</attribute>
		<attribute>
			<description>A ValueExpression for rendering the component's label</description>
			<name>label</name>
		</attribute>
		<attribute>
			<description>The maximum number of characters this input can take</description>
			<name>maxlength</name>
		</attribute>
		<attribute>
			<description>The HTML blur event handler. This attribute can hold ValueExpressions</description>
			<name>onblur</name>
		</attribute>
		<attribute>
			<description>The HTML change event handler. This attribute can hold ValueExpressions</description>
			<name>onchange</name>
		</attribute>
		<attribute>
			<description>The HTML focus event handler. This attribute can hold ValueExpressions</description>
			<name>onfocus</name>
		</attribute>
		<attribute>
			<description>The HTML click event handler. This attribute can hold ValueExpressions</description>
			<name>onclick</name>
		</attribute>
		<attribute>
			<description>The HTML double click event handler. This attribute can hold ValueExpressions</description>
			<name>ondblclick</name>
		</attribute>
		<attribute>
			<description>The HTML key down event handler. This attribute can hold ValueExpressions</description>
			<name>onkeydown</name>
		</attribute>
		<attribute>
			<description>The HTML key press event handler. This attribute can hold ValueExpressions</description>
			<name>onkeypress</name>
		</attribute>
		<attribute>
			<description>The HTML key up event handler. This attribute can hold ValueExpressions</description>
			<name>onkeyup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse down event handler. This attribute can hold ValueExpressions</description>
			<name>onmousedown</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmousemove</name>
		</attribute>
		<attribute>
			<description>The HTML mouse out event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseout</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseover</name>
		</attribute>
		<attribute>
			<description>The HTML mouse wheel event handler. This attribute can hold ValueExpressions</description>
			<name>onmousewheel</name>
		</attribute>
		<attribute>
			<description>The HTML mouse enter event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseenter</name>
		</attribute>
		<attribute>
			<description>The HTML mouse leave event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseleave</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" element of the HTML tag</description>
			<name>style</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" element of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "title" element of the HTML tag</description>
			<name>title</name>
		</attribute>
		<attribute>
			<name>readonly</name>
		</attribute>
		<attribute>
			<name>size</name>
		</attribute>
		<attribute>
			<name>tabindex</name>
		</attribute>
		<attribute>
			<name>placeholder</name>
		</attribute>
		<attribute>
			<description>The target for the overlay during AJAX calls. Used by the onevent handler of f:ajax to find the right target to overlay</description>
			<name>data-overlay-target</name>
		</attribute>
		<attribute>
			<description>A ValueExpression for disabling the UInput component</description>
			<name>disabled</name>
		</attribute>
		<attribute>
			<description>The input type of this element. Can be any HTML5 input type attribute value</description>
			<name>type</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>label</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.label</component-type>
			<renderer-type>com.quakearts.bootstrap.label.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" element of the HTML tag</description>
			<name>style</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" element of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that holds the UIOutput or UIInput component's value</description>
			<name>value</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Converter implementation for converting the UIInput or UIOutput component's value</description>
			<name>converter</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a conversion error</description>
			<name>converterMessage</name>
		</attribute>
		<attribute>
			<name>type</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>messages</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.messages</component-type>
			<renderer-type>com.quakearts.bootstrap.messages.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<name>successMessage</name>
		</attribute>
		<attribute>
			<name>for</name>
		</attribute>
		<attribute>
			<name>globalOnly</name>
		</attribute>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<name>showDetail</name>
		</attribute>
		<attribute>
			<name>showSummary</name>
		</attribute>
		<attribute>
			<description>HTML attribute for internationalization support. Indicates the writing direction of the components text</description>
			<name>dir</name>
		</attribute>
		<attribute>
			<name>errorClass</name>
		</attribute>
		<attribute>
			<name>errorStyle</name>
		</attribute>
		<attribute>
			<name>fatalClass</name>
		</attribute>
		<attribute>
			<name>fatalStyle</name>
		</attribute>
		<attribute>
			<name>infoClass</name>
		</attribute>
		<attribute>
			<name>infoStyle</name>
		</attribute>
		<attribute>
			<name>warnClass</name>
		</attribute>
		<attribute>
			<name>warnStyle</name>
		</attribute>
		<attribute>
			<description>HTML attribute used to declare the language of a Web page or a portion of a Web page</description>
			<name>lang</name>
		</attribute>
		<attribute>
			<name>layout</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" element of the HTML tag</description>
			<name>style</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" element of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "title" element of the HTML tag</description>
			<name>title</name>
		</attribute>
		<attribute>
			<name>tooltip</name>
		</attribute>
		<attribute>
			<name>dismissible</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>nav</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.nav</component-type>
			<renderer-type>com.quakearts.bootstrap.nav.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<name>stacked</name>
		</attribute>
		<attribute>
			<name>justified</name>
		</attribute>
		<attribute>
			<name>type</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" element of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>The HTML click event handler. This attribute can hold ValueExpressions</description>
			<name>onclick</name>
		</attribute>
		<attribute>
			<description>The HTML double click event handler. This attribute can hold ValueExpressions</description>
			<name>ondblclick</name>
		</attribute>
		<attribute>
			<description>The HTML mouse down event handler. This attribute can hold ValueExpressions</description>
			<name>onmousedown</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmousemove</name>
		</attribute>
		<attribute>
			<description>The HTML mouse out event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseout</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseover</name>
		</attribute>
		<attribute>
			<description>The HTML mouse up event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse wheel event handler. This attribute can hold ValueExpressions</description>
			<name>onmousewheel</name>
		</attribute>
		<attribute>
			<description>The HTML mouse enter event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseenter</name>
		</attribute>
		<attribute>
			<description>The HTML mouse leave event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseleave</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" element of the HTML tag</description>
			<name>style</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "title" element of the HTML tag</description>
			<name>title</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>navbar</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.navbar</component-type>
			<renderer-type>com.quakearts.bootstrap.navbar.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<name>type</name>
		</attribute>
		<attribute>
			<name>position</name>
		</attribute>
		<attribute>
			<name>fluid</name>
		</attribute>
		<attribute>
			<name>responsive</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" element of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" element of the HTML tag</description>
			<name>style</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>panel</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.outputpanel</component-type>
			<renderer-type>com.quakearts.bootstrap.outputpanel.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<name>type</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" element of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>The HTML click event handler. This attribute can hold ValueExpressions</description>
			<name>onclick</name>
		</attribute>
		<attribute>
			<description>The HTML double click event handler. This attribute can hold ValueExpressions</description>
			<name>ondblclick</name>
		</attribute>
		<attribute>
			<description>The HTML mouse down event handler. This attribute can hold ValueExpressions</description>
			<name>onmousedown</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmousemove</name>
		</attribute>
		<attribute>
			<description>The HTML mouse out event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseout</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseover</name>
		</attribute>
		<attribute>
			<description>The HTML mouse up event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse wheel event handler. This attribute can hold ValueExpressions</description>
			<name>onmousewheel</name>
		</attribute>
		<attribute>
			<description>The HTML mouse enter event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseenter</name>
		</attribute>
		<attribute>
			<description>The HTML mouse leave event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseleave</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" element of the HTML tag</description>
			<name>style</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "title" element of the HTML tag</description>
			<name>title</name>
		</attribute>
		<attribute>
			<description>Activate pop-up behavior</description>
			<name>popup</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>pagination</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.pagination</component-type>
			<renderer-type>com.quakearts.bootstrap.pagination.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootPaginationHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<name>pageSize</name>
		</attribute>
		<attribute>
			<name>limit</name>
		</attribute>
		<attribute>
			<name>for</name>
		</attribute>
		<attribute>
			<name>onevent</name>
		</attribute>
		<attribute>
			<name>onerror</name>
		</attribute>
		<attribute>
			<name>render</name>
		</attribute>
		<attribute>
			<name>execute</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" element of the HTML tag</description>
			<name>style</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" element of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<name>reset</name>
		</attribute>
		<attribute>
			<description>The target for the overlay during AJAX calls. Used by the onevent handler of f:ajax to find the right target to overlay</description>
			<name>data-overlay-target</name>
		</attribute>
		<attribute>
			<description>The HTML mouse down event handler. This attribute can hold ValueExpressions</description>
			<name>onmousedown</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmousemove</name>
		</attribute>
		<attribute>
			<description>The HTML mouse out event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseout</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseover</name>
		</attribute>
		<attribute>
			<description>The HTML mouse up event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse wheel event handler. This attribute can hold ValueExpressions</description>
			<name>onmousewheel</name>
		</attribute>
		<attribute>
			<description>The HTML mouse enter event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseenter</name>
		</attribute>
		<attribute>
			<description>The HTML mouse leave event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseleave</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>row</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.bootrow</component-type>
			<renderer-type>com.quakearts.bootstrap.bootrow.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" element of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" element of the HTML tag</description>
			<name>style</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>selectManyListbox</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.selectManyListBox</component-type>
			<renderer-type>com.quakearts.bootstrap.select.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that holds the UIOutput or UIInput component's value</description>
			<name>value</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Converter implementation for converting the UIInput or UIOutput component's value</description>
			<name>converter</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a conversion error</description>
			<name>converterMessage</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Validator implementation for validating the UIInput component's value</description>
			<name>validator</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a validator error</description>
			<name>validatorMessage</name>
		</attribute>
		<attribute>
			<description>A MethodExpression executed when the UIInput component's value changes</description>
			<name>valueChangeListener</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true the JSf lifecycle will end at the process validations stage and return an error to the view if value of the component is null</description>
			<name>required</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed when the component's value is required and fails validation</description>
			<name>requiredMessage</name>
		</attribute>
		<attribute>
			<description>A string indicating the java.util.Collecton implementation class of the component's value</description>
			<name>collectionType</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean to determine the UIInput processing status. A value of true prevents the processing of the components decode phase</description>
			<name>required</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine the processing of javax.faces.component.SelectItem's marked as a hideNoSelection. A value of true prevents such components from being rendered</description>
			<name>hideNoSelectionOption</name>
		</attribute>
		<attribute>
			<description>HTML attribute for internationalization support. Indicates the writing direction of the components text</description>
			<name>dir</name>
		</attribute>
		<attribute>
			<description>HTML attribute used to declare the language of a Web page or a portion of a Web page</description>
			<name>lang</name>
		</attribute>
		<attribute>
			<description>A ValueExpression for rendering the component's label</description>
			<name>label</name>
		</attribute>
		<attribute>
			<description>The HTML blur event handler. This attribute can hold ValueExpressions</description>
			<name>onblur</name>
		</attribute>
		<attribute>
			<description>The HTML change event handler. This attribute can hold ValueExpressions</description>
			<name>onchange</name>
		</attribute>
		<attribute>
			<description>The HTML focus event handler. This attribute can hold ValueExpressions</description>
			<name>onfocus</name>
		</attribute>
		<attribute>
			<description>The HTML click event handler. This attribute can hold ValueExpressions</description>
			<name>onclick</name>
		</attribute>
		<attribute>
			<description>The HTML double click event handler. This attribute can hold ValueExpressions</description>
			<name>ondblclick</name>
		</attribute>
		<attribute>
			<description>The HTML key down event handler. This attribute can hold ValueExpressions</description>
			<name>onkeydown</name>
		</attribute>
		<attribute>
			<description>The HTML key press event handler. This attribute can hold ValueExpressions</description>
			<name>onkeypress</name>
		</attribute>
		<attribute>
			<description>The HTML key up event handler. This attribute can hold ValueExpressions</description>
			<name>onkeyup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse down event handler. This attribute can hold ValueExpressions</description>
			<name>onmousedown</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmousemove</name>
		</attribute>
		<attribute>
			<description>The HTML mouse out event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseout</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseover</name>
		</attribute>
		<attribute>
			<description>The HTML mouse wheel event handler. This attribute can hold ValueExpressions</description>
			<name>onmousewheel</name>
		</attribute>
		<attribute>
			<description>The HTML mouse enter event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseenter</name>
		</attribute>
		<attribute>
			<description>The HTML mouse leave event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseleave</name>
		</attribute>
		<attribute>
			<name>mainStyle</name>
		</attribute>
		<attribute>
			<name>mainClass</name>
		</attribute>
		<attribute>
			<name>selectStyle</name>
		</attribute>
		<attribute>
			<name>selectClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "title" element of the HTML tag</description>
			<name>title</name>
		</attribute>
		<attribute>
			<name>readonly</name>
		</attribute>
		<attribute>
			<name>size</name>
		</attribute>
		<attribute>
			<name>limit</name>
		</attribute>
		<attribute>
			<name>tabindex</name>
		</attribute>
		<attribute>
			<description>The target for the overlay during AJAX calls. Used by the onevent handler of f:ajax to find the right target to overlay</description>
			<name>data-overlay-target</name>
		</attribute>
		<attribute>
			<description>A ValueExpression for disabling the UInput component</description>
			<name>disabled</name>
		</attribute>		
	</tag>
	<tag>
		<tag-name>selectManyMenu</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.selectManyMenu</component-type>
			<renderer-type>com.quakearts.bootstrap.select.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootSelectMenuHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that holds the UIOutput or UIInput component's value</description>
			<name>value</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Converter implementation for converting the UIInput or UIOutput component's value</description>
			<name>converter</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a conversion error</description>
			<name>converterMessage</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Validator implementation for validating the UIInput component's value</description>
			<name>validator</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a validator error</description>
			<name>validatorMessage</name>
		</attribute>
		<attribute>
			<description>A MethodExpression executed when the UIInput component's value changes</description>
			<name>valueChangeListener</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true the JSf lifecycle will end at the process validations stage and return an error to the view if value of the component is null</description>
			<name>required</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed when the component's value is required and fails validation</description>
			<name>requiredMessage</name>
		</attribute>
		<attribute>
			<description>A string indicating the java.util.Collecton implementation class of the component's value</description>
			<name>collectionType</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean to determine the UIInput processing status. A value of true prevents the processing of the components decode phase</description>
			<name>required</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine the processing of javax.faces.component.SelectItem's marked as a hideNoSelection. A value of true prevents such components from being rendered</description>
			<name>hideNoSelectionOption</name>
		</attribute>
		<attribute>
			<description>HTML attribute for internationalization support. Indicates the writing direction of the components text</description>
			<name>dir</name>
		</attribute>
		<attribute>
			<description>HTML attribute used to declare the language of a Web page or a portion of a Web page</description>
			<name>lang</name>
		</attribute>
		<attribute>
			<description>A ValueExpression for rendering the component's label</description>
			<name>label</name>
		</attribute>
		<attribute>
			<description>The HTML blur event handler. This attribute can hold ValueExpressions</description>
			<name>onblur</name>
		</attribute>
		<attribute>
			<description>The HTML change event handler. This attribute can hold ValueExpressions</description>
			<name>onchange</name>
		</attribute>
		<attribute>
			<description>The HTML focus event handler. This attribute can hold ValueExpressions</description>
			<name>onfocus</name>
		</attribute>
		<attribute>
			<description>The HTML click event handler. This attribute can hold ValueExpressions</description>
			<name>onclick</name>
		</attribute>
		<attribute>
			<description>The HTML double click event handler. This attribute can hold ValueExpressions</description>
			<name>ondblclick</name>
		</attribute>
		<attribute>
			<description>The HTML key down event handler. This attribute can hold ValueExpressions</description>
			<name>onkeydown</name>
		</attribute>
		<attribute>
			<description>The HTML key press event handler. This attribute can hold ValueExpressions</description>
			<name>onkeypress</name>
		</attribute>
		<attribute>
			<description>The HTML key up event handler. This attribute can hold ValueExpressions</description>
			<name>onkeyup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse down event handler. This attribute can hold ValueExpressions</description>
			<name>onmousedown</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmousemove</name>
		</attribute>
		<attribute>
			<description>The HTML mouse out event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseout</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseover</name>
		</attribute>
		<attribute>
			<description>The HTML mouse wheel event handler. This attribute can hold ValueExpressions</description>
			<name>onmousewheel</name>
		</attribute>
		<attribute>
			<description>The HTML mouse enter event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseenter</name>
		</attribute>
		<attribute>
			<description>The HTML mouse leave event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseleave</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "title" element of the HTML tag</description>
			<name>title</name>
		</attribute>
		<attribute>
			<name>readonly</name>
		</attribute>
		<attribute>
			<name>size</name>
		</attribute>
		<attribute>
			<name>limit</name>
		</attribute>
		<attribute>
			<name>tabindex</name>
		</attribute>
		<attribute>
			<description>Bootstrap button type to render</description>
			<name>displayType</name>
		</attribute>
		<attribute>
			<name>fill</name>
		</attribute>
		<attribute>
			<name>autocomplete</name>
		</attribute>
		<attribute>
			<name>listener</name>
		</attribute>
		<attribute>
			<name>render</name>
		</attribute>
		<attribute>
			<name>execute</name>
		</attribute>
		<attribute>
			<name>onevent</name>
		</attribute>
		<attribute>
			<name>onerror</name>
		</attribute>
		<attribute>
			<name>suggestion</name>
		</attribute>
		<attribute>
			<name>delay</name>
		</attribute>
		<attribute>
			<name>minchars</name>
		</attribute>
		<attribute>
			<name>opened</name>
		</attribute>
		<attribute>
			<name>mainStyle</name>
		</attribute>
		<attribute>
			<name>mainClass</name>
		</attribute>
		<attribute>
			<name>buttonStyle</name>
		</attribute>
		<attribute>
			<name>buttonClass</name>
		</attribute>
		<attribute>
			<name>autoStyle</name>
		</attribute>
		<attribute>
			<name>autoClass</name>
		</attribute>
		<attribute>
			<name>groupStyle</name>
		</attribute>
		<attribute>
			<name>groupClass</name>
		</attribute>
		<attribute>
			<name>selectStyle</name>
		</attribute>
		<attribute>
			<name>selectClass</name>
		</attribute>
		<attribute>
			<description>The target for the overlay during AJAX calls. Used by the onevent handler of f:ajax to find the right target to overlay</description>
			<name>data-overlay-target</name>
		</attribute>
		<attribute>
			<description>A ValueExpression for disabling the UInput component</description>
			<name>disabled</name>
		</attribute>		
	</tag>
	<tag>
		<tag-name>selectOneListbox</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.selectOneListbox</component-type>
			<renderer-type>com.quakearts.bootstrap.select.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that holds the UIOutput or UIInput component's value</description>
			<name>value</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Converter implementation for converting the UIInput or UIOutput component's value</description>
			<name>converter</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a conversion error</description>
			<name>converterMessage</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Validator implementation for validating the UIInput component's value</description>
			<name>validator</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a validator error</description>
			<name>validatorMessage</name>
		</attribute>
		<attribute>
			<description>A MethodExpression executed when the UIInput component's value changes</description>
			<name>valueChangeListener</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true the JSf lifecycle will end at the process validations stage and return an error to the view if value of the component is null</description>
			<name>required</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed when the component's value is required and fails validation</description>
			<name>requiredMessage</name>
		</attribute>
		<attribute>
			<description>A string indicating the java.util.Collecton implementation class of the component's value</description>
			<name>collectionType</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean to determine the UIInput processing status. A value of true prevents the processing of the components decode phase</description>
			<name>required</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine the processing of javax.faces.component.SelectItem's marked as a hideNoSelection. A value of true prevents such components from being rendered</description>
			<name>hideNoSelectionOption</name>
		</attribute>
		<attribute>
			<description>HTML attribute for internationalization support. Indicates the writing direction of the components text</description>
			<name>dir</name>
		</attribute>
		<attribute>
			<description>HTML attribute used to declare the language of a Web page or a portion of a Web page</description>
			<name>lang</name>
		</attribute>
		<attribute>
			<description>A ValueExpression for rendering the component's label</description>
			<name>label</name>
		</attribute>
		<attribute>
			<description>The HTML blur event handler. This attribute can hold ValueExpressions</description>
			<name>onblur</name>
		</attribute>
		<attribute>
			<description>The HTML change event handler. This attribute can hold ValueExpressions</description>
			<name>onchange</name>
		</attribute>
		<attribute>
			<description>The HTML focus event handler. This attribute can hold ValueExpressions</description>
			<name>onfocus</name>
		</attribute>
		<attribute>
			<description>The HTML click event handler. This attribute can hold ValueExpressions</description>
			<name>onclick</name>
		</attribute>
		<attribute>
			<description>The HTML double click event handler. This attribute can hold ValueExpressions</description>
			<name>ondblclick</name>
		</attribute>
		<attribute>
			<description>The HTML key down event handler. This attribute can hold ValueExpressions</description>
			<name>onkeydown</name>
		</attribute>
		<attribute>
			<description>The HTML key press event handler. This attribute can hold ValueExpressions</description>
			<name>onkeypress</name>
		</attribute>
		<attribute>
			<description>The HTML key up event handler. This attribute can hold ValueExpressions</description>
			<name>onkeyup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse down event handler. This attribute can hold ValueExpressions</description>
			<name>onmousedown</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmousemove</name>
		</attribute>
		<attribute>
			<description>The HTML mouse out event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseout</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseover</name>
		</attribute>
		<attribute>
			<description>The HTML mouse wheel event handler. This attribute can hold ValueExpressions</description>
			<name>onmousewheel</name>
		</attribute>
		<attribute>
			<description>The HTML mouse enter event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseenter</name>
		</attribute>
		<attribute>
			<description>The HTML mouse leave event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseleave</name>
		</attribute>
		<attribute>
			<name>mainStyle</name>
		</attribute>
		<attribute>
			<name>mainClass</name>
		</attribute>
		<attribute>
			<name>selectStyle</name>
		</attribute>
		<attribute>
			<name>selectClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "title" element of the HTML tag</description>
			<name>title</name>
		</attribute>
		<attribute>
			<name>readonly</name>
		</attribute>
		<attribute>
			<name>size</name>
		</attribute>
		<attribute>
			<name>limit</name>
		</attribute>
		<attribute>
			<name>tabindex</name>
		</attribute>
		<attribute>
			<description>The target for the overlay during AJAX calls. Used by the onevent handler of f:ajax to find the right target to overlay</description>
			<name>data-overlay-target</name>
		</attribute>
		<attribute>
			<description>A ValueExpression for disabling the UInput component</description>
			<name>disabled</name>
		</attribute>		
	</tag>
	<tag>
		<tag-name>selectOneMenu</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.selectOneMenu</component-type>
			<renderer-type>com.quakearts.bootstrap.select.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootSelectMenuHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that holds the UIOutput or UIInput component's value</description>
			<name>value</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Converter implementation for converting the UIInput or UIOutput component's value</description>
			<name>converter</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a conversion error</description>
			<name>converterMessage</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Validator implementation for validating the UIInput component's value</description>
			<name>validator</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a validator error</description>
			<name>validatorMessage</name>
		</attribute>
		<attribute>
			<description>A MethodExpression executed when the UIInput component's value changes</description>
			<name>valueChangeListener</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true the JSf lifecycle will end at the process validations stage and return an error to the view if value of the component is null</description>
			<name>required</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed when the component's value is required and fails validation</description>
			<name>requiredMessage</name>
		</attribute>
		<attribute>
			<description>A string indicating the java.util.Collecton implementation class of the component's value</description>
			<name>collectionType</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean to determine the UIInput processing status. A value of true prevents the processing of the components decode phase</description>
			<name>required</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine the processing of javax.faces.component.SelectItem's marked as a hideNoSelection. A value of true prevents such components from being rendered</description>
			<name>hideNoSelectionOption</name>
		</attribute>
		<attribute>
			<description>HTML attribute for internationalization support. Indicates the writing direction of the components text</description>
			<name>dir</name>
		</attribute>
		<attribute>
			<description>HTML attribute used to declare the language of a Web page or a portion of a Web page</description>
			<name>lang</name>
		</attribute>
		<attribute>
			<description>A ValueExpression for rendering the component's label</description>
			<name>label</name>
		</attribute>
		<attribute>
			<description>The HTML blur event handler. This attribute can hold ValueExpressions</description>
			<name>onblur</name>
		</attribute>
		<attribute>
			<description>The HTML change event handler. This attribute can hold ValueExpressions</description>
			<name>onchange</name>
		</attribute>
		<attribute>
			<description>The HTML focus event handler. This attribute can hold ValueExpressions</description>
			<name>onfocus</name>
		</attribute>
		<attribute>
			<description>The HTML click event handler. This attribute can hold ValueExpressions</description>
			<name>onclick</name>
		</attribute>
		<attribute>
			<description>The HTML double click event handler. This attribute can hold ValueExpressions</description>
			<name>ondblclick</name>
		</attribute>
		<attribute>
			<description>The HTML key down event handler. This attribute can hold ValueExpressions</description>
			<name>onkeydown</name>
		</attribute>
		<attribute>
			<description>The HTML key press event handler. This attribute can hold ValueExpressions</description>
			<name>onkeypress</name>
		</attribute>
		<attribute>
			<description>The HTML key up event handler. This attribute can hold ValueExpressions</description>
			<name>onkeyup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse down event handler. This attribute can hold ValueExpressions</description>
			<name>onmousedown</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmousemove</name>
		</attribute>
		<attribute>
			<description>The HTML mouse out event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseout</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseover</name>
		</attribute>
		<attribute>
			<description>The HTML mouse wheel event handler. This attribute can hold ValueExpressions</description>
			<name>onmousewheel</name>
		</attribute>
		<attribute>
			<description>The HTML mouse enter event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseenter</name>
		</attribute>
		<attribute>
			<description>The HTML mouse leave event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseleave</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "title" element of the HTML tag</description>
			<name>title</name>
		</attribute>
		<attribute>
			<name>size</name>
		</attribute>
		<attribute>
			<name>limit</name>
		</attribute>
		<attribute>
			<name>tabindex</name>
		</attribute>
		<attribute>
			<description>Bootstrap button type to render</description>
			<name>displayType</name>
		</attribute>
		<attribute>
			<name>fill</name>
		</attribute>
		<attribute>
			<name>autocomplete</name>
		</attribute>
		<attribute>
			<name>listener</name>
		</attribute>
		<attribute>
			<name>render</name>
		</attribute>
		<attribute>
			<name>execute</name>
		</attribute>
		<attribute>
			<name>onevent</name>
		</attribute>
		<attribute>
			<name>onerror</name>
		</attribute>
		<attribute>
			<name>suggestion</name>
		</attribute>
		<attribute>
			<name>delay</name>
		</attribute>
		<attribute>
			<name>minchars</name>
		</attribute>
		<attribute>
			<name>opened</name>
		</attribute>
		<attribute>
			<name>mainStyle</name>
		</attribute>
		<attribute>
			<name>mainClass</name>
		</attribute>
		<attribute>
			<name>buttonStyle</name>
		</attribute>
		<attribute>
			<name>buttonClass</name>
		</attribute>
		<attribute>
			<name>autoStyle</name>
		</attribute>
		<attribute>
			<name>autoClass</name>
		</attribute>
		<attribute>
			<name>groupStyle</name>
		</attribute>
		<attribute>
			<name>groupClass</name>
		</attribute>
		<attribute>
			<name>selectStyle</name>
		</attribute>
		<attribute>
			<name>selectClass</name>
		</attribute>
		<attribute>
			<description>The target for the overlay during AJAX calls. Used by the onevent handler of f:ajax to find the right target to overlay</description>
			<name>data-overlay-target</name>
		</attribute>
		<attribute>
			<description>A ValueExpression for disabling the UInput component</description>
			<name>disabled</name>
		</attribute>		
	</tag>
	<tag>
		<tag-name>selectOneInputGroup</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.selectinputgroup</component-type>
			<renderer-type>com.quakearts.bootstrap.selectinputgroup.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootSelectMenuHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that holds the UIOutput or UIInput component's value</description>
			<name>value</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Converter implementation for converting the UIInput or UIOutput component's value</description>
			<name>converter</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a conversion error</description>
			<name>converterMessage</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Validator implementation for validating the UIInput component's value</description>
			<name>validator</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a validator error</description>
			<name>validatorMessage</name>
		</attribute>
		<attribute>
			<description>A MethodExpression executed when the UIInput component's value changes</description>
			<name>valueChangeListener</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true the JSf lifecycle will end at the process validations stage and return an error to the view if value of the component is null</description>
			<name>required</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed when the component's value is required and fails validation</description>
			<name>requiredMessage</name>
		</attribute>
		<attribute>
			<description>A string indicating the java.util.Collecton implementation class of the component's value</description>
			<name>collectionType</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean to determine the UIInput processing status. A value of true prevents the processing of the components decode phase</description>
			<name>required</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine the processing of javax.faces.component.SelectItem's marked as a hideNoSelection. A value of true prevents such components from being rendered</description>
			<name>hideNoSelectionOption</name>
		</attribute>
		<attribute>
			<description>HTML attribute for internationalization support. Indicates the writing direction of the components text</description>
			<name>dir</name>
		</attribute>
		<attribute>
			<description>HTML attribute used to declare the language of a Web page or a portion of a Web page</description>
			<name>lang</name>
		</attribute>
		<attribute>
			<description>A ValueExpression for rendering the component's label</description>
			<name>label</name>
		</attribute>
		<attribute>
			<description>The HTML blur event handler. This attribute can hold ValueExpressions</description>
			<name>onblur</name>
		</attribute>
		<attribute>
			<description>The HTML change event handler. This attribute can hold ValueExpressions</description>
			<name>onchange</name>
		</attribute>
		<attribute>
			<description>The HTML focus event handler. This attribute can hold ValueExpressions</description>
			<name>onfocus</name>
		</attribute>
		<attribute>
			<description>The HTML click event handler. This attribute can hold ValueExpressions</description>
			<name>onclick</name>
		</attribute>
		<attribute>
			<description>The HTML double click event handler. This attribute can hold ValueExpressions</description>
			<name>ondblclick</name>
		</attribute>
		<attribute>
			<description>The HTML key down event handler. This attribute can hold ValueExpressions</description>
			<name>onkeydown</name>
		</attribute>
		<attribute>
			<description>The HTML key press event handler. This attribute can hold ValueExpressions</description>
			<name>onkeypress</name>
		</attribute>
		<attribute>
			<description>The HTML key up event handler. This attribute can hold ValueExpressions</description>
			<name>onkeyup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse down event handler. This attribute can hold ValueExpressions</description>
			<name>onmousedown</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmousemove</name>
		</attribute>
		<attribute>
			<description>The HTML mouse out event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseout</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseover</name>
		</attribute>
		<attribute>
			<description>The HTML mouse wheel event handler. This attribute can hold ValueExpressions</description>
			<name>onmousewheel</name>
		</attribute>
		<attribute>
			<description>The HTML mouse enter event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseenter</name>
		</attribute>
		<attribute>
			<description>The HTML mouse leave event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseleave</name>
		</attribute>
		<attribute>
			<name>mainStyle</name>
		</attribute>
		<attribute>
			<name>mainClass</name>
		</attribute>
		<attribute>
			<name>groupStyle</name>
		</attribute>
		<attribute>
			<name>addonStyle</name>
		</attribute>
		<attribute>
			<name>controlStyle</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "title" element of the HTML tag</description>
			<name>title</name>
		</attribute>
		<attribute>
			<name>tabindex</name>
		</attribute>
		<attribute>
			<name>autocomplete</name>
		</attribute>
		<attribute>
			<name>listener</name>
		</attribute>
		<attribute>
			<name>render</name>
		</attribute>
		<attribute>
			<name>execute</name>
		</attribute>
		<attribute>
			<name>onevent</name>
		</attribute>
		<attribute>
			<name>onerror</name>
		</attribute>
		<attribute>
			<name>suggestion</name>
		</attribute>
		<attribute>
			<name>delay</name>
		</attribute>
		<attribute>
			<name>minchars</name>
		</attribute>
		<attribute>
			<description>The target for the overlay during AJAX calls. Used by the onevent handler of f:ajax to find the right target to overlay</description>
			<name>data-overlay-target</name>
		</attribute>
		<attribute>
			<description>A ValueExpression for disabling the UInput component</description>
			<name>disabled</name>
		</attribute>		
	</tag>
	<tag>
		<tag-name>selectOneInput</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.selectoneinput</component-type>
			<renderer-type>com.quakearts.bootstrap.selectoneinput.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootSelectMenuHandler</handler-class>
		</component>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that holds the UIOutput or UIInput component's value</description>
			<name>value</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Converter implementation for converting the UIInput or UIOutput component's value</description>
			<name>converter</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a conversion error</description>
			<name>converterMessage</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a javax.faces.Validator implementation for validating the UIInput component's value</description>
			<name>validator</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed on a validator error</description>
			<name>validatorMessage</name>
		</attribute>
		<attribute>
			<description>A MethodExpression executed when the UIInput component's value changes</description>
			<name>valueChangeListener</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean. When true the JSf lifecycle will end at the process validations stage and return an error to the view if value of the component is null</description>
			<name>required</name>
		</attribute>
		<attribute>
			<description>Error message to be displayed when the component's value is required and fails validation</description>
			<name>requiredMessage</name>
		</attribute>
		<attribute>
			<description>A string indicating the java.util.Collecton implementation class of the component's value</description>
			<name>collectionType</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that evaluates to a boolean to determine the UIInput processing status. A value of true prevents the processing of the components decode phase</description>
			<name>required</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine the processing of javax.faces.component.SelectItem's marked as a hideNoSelection. A value of true prevents such components from being rendered</description>
			<name>hideNoSelectionOption</name>
		</attribute>
		<attribute>
			<description>HTML attribute for internationalization support. Indicates the writing direction of the components text</description>
			<name>dir</name>
		</attribute>
		<attribute>
			<description>HTML attribute used to declare the language of a Web page or a portion of a Web page</description>
			<name>lang</name>
		</attribute>
		<attribute>
			<description>The HTML blur event handler. This attribute can hold ValueExpressions</description>
			<name>onblur</name>
		</attribute>
		<attribute>
			<description>The HTML change event handler. This attribute can hold ValueExpressions</description>
			<name>onchange</name>
		</attribute>
		<attribute>
			<description>The HTML focus event handler. This attribute can hold ValueExpressions</description>
			<name>onfocus</name>
		</attribute>
		<attribute>
			<description>The HTML click event handler. This attribute can hold ValueExpressions</description>
			<name>onclick</name>
		</attribute>
		<attribute>
			<description>The HTML double click event handler. This attribute can hold ValueExpressions</description>
			<name>ondblclick</name>
		</attribute>
		<attribute>
			<description>The HTML key down event handler. This attribute can hold ValueExpressions</description>
			<name>onkeydown</name>
		</attribute>
		<attribute>
			<description>The HTML key press event handler. This attribute can hold ValueExpressions</description>
			<name>onkeypress</name>
		</attribute>
		<attribute>
			<description>The HTML key up event handler. This attribute can hold ValueExpressions</description>
			<name>onkeyup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse down event handler. This attribute can hold ValueExpressions</description>
			<name>onmousedown</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmousemove</name>
		</attribute>
		<attribute>
			<description>The HTML mouse out event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseout</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseover</name>
		</attribute>
		<attribute>
			<description>The HTML mouse wheel event handler. This attribute can hold ValueExpressions</description>
			<name>onmousewheel</name>
		</attribute>
		<attribute>
			<description>The HTML mouse enter event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseenter</name>
		</attribute>
		<attribute>
			<description>The HTML mouse leave event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseleave</name>
		</attribute>
		<attribute>
			<name>mainStyle</name>
		</attribute>
		<attribute>
			<name>mainClass</name>
		</attribute>
		<attribute>
			<name>wrapClass</name>
		</attribute>
		<attribute>
			<name>wrapStyle</name>
		</attribute>
		<attribute>
			<name>dropClass</name>
		</attribute>
		<attribute>
			<name>dropStyle</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "title" element of the HTML tag</description>
			<name>title</name>
		</attribute>
		<attribute>
			<name>readonly</name>
		</attribute>
		<attribute>
			<name>tabindex</name>
		</attribute>
		<attribute>
			<name>autocomplete</name>
		</attribute>
		<attribute>
			<name>listener</name>
		</attribute>
		<attribute>
			<description>Bootstrap button type to render</description>
			<name>displayType</name>
		</attribute>
		<attribute>
			<name>render</name>
		</attribute>
		<attribute>
			<name>execute</name>
		</attribute>
		<attribute>
			<name>onevent</name>
		</attribute>
		<attribute>
			<name>onerror</name>
		</attribute>
		<attribute>
			<name>suggestion</name>
		</attribute>
		<attribute>
			<name>delay</name>
		</attribute>
		<attribute>
			<name>minchars</name>
		</attribute>
		<attribute>
			<description>The target for the overlay during AJAX calls. Used by the onevent handler of f:ajax to find the right target to overlay</description>
			<name>data-overlay-target</name>
		</attribute>
		<attribute>
			<description>A ValueExpression for disabling the UInput component</description>
			<name>disabled</name>
		</attribute>		
	</tag>
	<tag>
		<tag-name>dataTable</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.datatable</component-type>
			<renderer-type>com.quakearts.bootstrap.datatable.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<name>first</name>
		</attribute>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to determine whether or not the component will be rendered. </description>
			<name>rendered</name>
		</attribute>
		<attribute>
			<name>rows</name>
		</attribute>
		<attribute>
			<description>A ValueExpression that holds the UIOutput or UIInput component's value</description>
			<name>value</name>
		</attribute>
		<attribute>
			<name>var</name>
		</attribute>
		<attribute>
			<name>bgcolor</name>
		</attribute>
		<attribute>
			<name>bodyrows</name>
		</attribute>
		<attribute>
			<name>border</name>
		</attribute>
		<attribute>
			<name>captionClass</name>
		</attribute>
		<attribute>
			<name>captionStyle</name>
		</attribute>
		<attribute>
			<name>cellpadding</name>
		</attribute>
		<attribute>
			<name>cellspacing</name>
		</attribute>
		<attribute>
			<name>columnClasses</name>
		</attribute>
		<attribute>
			<description>HTML attribute for internationalization support. Indicates the writing direction of the components text</description>
			<name>dir</name>
		</attribute>
		<attribute>
			<name>footerClass</name>
		</attribute>
		<attribute>
			<name>frame</name>
		</attribute>
		<attribute>
			<name>headerClass</name>
		</attribute>
		<attribute>
			<name>headerClasses</name>
		</attribute>
		<attribute>
			<description>HTML attribute used to declare the language of a Web page or a portion of a Web page</description>
			<name>lang</name>
		</attribute>
		<attribute>
			<description>The HTML click event handler. This attribute can hold ValueExpressions</description>
			<name>onclick</name>
		</attribute>
		<attribute>
			<description>The HTML double click event handler. This attribute can hold ValueExpressions</description>
			<name>ondblclick</name>
		</attribute>
		<attribute>
			<description>The HTML key down event handler. This attribute can hold ValueExpressions</description>
			<name>onkeydown</name>
		</attribute>
		<attribute>
			<description>The HTML key press event handler. This attribute can hold ValueExpressions</description>
			<name>onkeypress</name>
		</attribute>
		<attribute>
			<description>The HTML key up event handler. This attribute can hold ValueExpressions</description>
			<name>onkeyup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse down event handler. This attribute can hold ValueExpressions</description>
			<name>onmousedown</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmousemove</name>
		</attribute>
		<attribute>
			<description>The HTML mouse out event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseout</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseover</name>
		</attribute>
		<attribute>
			<description>The HTML mouse up event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse wheel event handler. This attribute can hold ValueExpressions</description>
			<name>onmousewheel</name>
		</attribute>
		<attribute>
			<description>The HTML mouse enter event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseenter</name>
		</attribute>
		<attribute>
			<description>The HTML mouse leave event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseleave</name>
		</attribute>
		<attribute>
			<name>rowClasses</name>
		</attribute>
		<attribute>
			<name>rules</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" element of the HTML tag</description>
			<name>style</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" element of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<name>summary</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "title" element of the HTML tag</description>
			<name>title</name>
		</attribute>
		<attribute>
			<name>width</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<name>idVar</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>resource</tag-name>
		<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootResourceTagHandler</handler-class>
		<attribute>
			<name>name</name>
			<required>true</required>
		</attribute>
		<attribute>
			<name>library</name>
			<required>true</required>
		</attribute>
		<attribute>
			<name>position</name>
		</attribute>
		<attribute>
			<name>type</name>
			<required>true</required>
		</attribute>
	</tag>
	<tag>
		<tag-name>boot</tag-name>
		<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootTagHandler</handler-class>
	</tag>
	<tag>
		<tag-name>paginationListener</tag-name>
		<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootPaginationListenerHandler</handler-class>
		<attribute>
			<name>value</name>
			<required>true</required>
		</attribute>
	</tag>
	<tag>
		<tag-name>responsiveImage</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.bootresponsiveimage</component-type>
			<renderer-type>com.quakearts.bootstrap.bootresponsiveimage.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<name>align</name>
		</attribute>
		<attribute>
			<name>alt</name>
		</attribute>
		<attribute>
			<name>border</name>
		</attribute>
		<attribute>
			<name>crossorigin</name>
		</attribute>
		<attribute>
			<name>height</name>
		</attribute>
		<attribute>
			<name>hspace</name>
		</attribute>
		<attribute>
			<name>ismap</name>
		</attribute>
		<attribute>
			<name>longdesc</name>
		</attribute>
		<attribute>
			<name>usemap</name>
		</attribute>
		<attribute>
			<name>vspace</name>
		</attribute>
		<attribute>
			<name>width</name>
		</attribute>
		<attribute>
			<description>The HTML click event handler. This attribute can hold ValueExpressions</description>
			<name>onclick</name>
		</attribute>
		<attribute>
			<description>The HTML double click event handler. This attribute can hold ValueExpressions</description>
			<name>ondblclick</name>
		</attribute>
		<attribute>
			<description>The HTML mouse down event handler. This attribute can hold ValueExpressions</description>
			<name>onmousedown</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmousemove</name>
		</attribute>
		<attribute>
			<description>The HTML mouse out event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseout</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseover</name>
		</attribute>
		<attribute>
			<description>The HTML mouse up event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse wheel event handler. This attribute can hold ValueExpressions</description>
			<name>onmousewheel</name>
		</attribute>
		<attribute>
			<description>The HTML mouse enter event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseenter</name>
		</attribute>
		<attribute>
			<description>The HTML mouse leave event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseleave</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "style" element of the HTML tag</description>
			<name>style</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" element of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "title" element of the HTML tag</description>
			<name>title</name>
		</attribute>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
	</tag>
	<tag>
		<tag-name>imageEntry</tag-name>
		<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootImageEntryHandler</handler-class>
		<attribute>
			<name>size</name>
			<required>true</required>
		</attribute>
		<attribute>
			<name>imagePath</name>
			<required>true</required>
		</attribute>
	</tag>
	<tag>
		<tag-name>sideMenu</tag-name>
		<component>
			<component-type>com.quakearts.bootstrap.sidemenu</component-type>
			<renderer-type>com.quakearts.bootstrap.sidemenu.renderer</renderer-type>
			<handler-class>com.quakearts.webapp.facelets.bootstrap.handlers.BootBaseHandler</handler-class>
		</component>
		<attribute>
			<description>A ValueExpression to render as the "style" element of the HTML tag</description>
			<name>style</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render as the "class" element of the HTML tag</description>
			<name>styleClass</name>
		</attribute>
		<attribute>
			<description>A ValueExpression to render the "title" element of the HTML tag</description>
			<name>title</name>
		</attribute>
		<attribute>
			<description>the ID of the component</description>
			<name>id</name>
		</attribute>
		<attribute>
			<description>The ValueExpression linking this component to a property in a backing bean</description>
			<name>binding</name>
		</attribute>
		<attribute>
			<description>The HTML click event handler. This attribute can hold ValueExpressions</description>
			<name>onclick</name>
		</attribute>
		<attribute>
			<description>The HTML double click event handler. This attribute can hold ValueExpressions</description>
			<name>ondblclick</name>
		</attribute>
		<attribute>
			<description>The HTML mouse down event handler. This attribute can hold ValueExpressions</description>
			<name>onmousedown</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmousemove</name>
		</attribute>
		<attribute>
			<description>The HTML mouse out event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseout</name>
		</attribute>
		<attribute>
			<description>The HTML mouse over event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseover</name>
		</attribute>
		<attribute>
			<description>The HTML mouse up event handler. This attribute can hold ValueExpressions</description>
			<name>onmouseup</name>
		</attribute>
		<attribute>
			<description>The HTML mouse wheel event handler. This attribute can hold ValueExpressions</description>
			<name>onmousewheel</name>
		</attribute>
	</tag>	
</facelet-taglib>